<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2041.6667px" preserveAspectRatio="none" style="width:1962px;height:2041px;background:#333333;" version="1.1" viewBox="0 0 1962 2041" width="1962.5px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="220.8333" x="863.8021" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="197.9167" x="875.2604" y="30.5583">com.telenav.lexakai</text><!--MD5=[762aa3d0df6a9d47bd8e105afbd066b5]
class BaseRepeater--><rect codeLine="6" fill="#282828" height="48.055" id="BaseRepeater" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="123.9583" x="678.125" y="182.3486"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="123.9583" x="678.125" y="182.3486"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="123.9583" x="678.125" y="205.4036"/><rect codeLine="6" fill="none" height="48.055" id="BaseRepeater" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="123.9583" x="678.125" y="182.3486"/><ellipse cx="692.7083" cy="198.0428" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M692.8223,194.7449 L691.9739,198.4741 L693.6768,198.4741 Z M691.7236,193.0969 L693.927,193.0969 L696.3867,202.2095 L694.5862,202.2095 L694.0247,199.9573 L691.6138,199.9573 L691.0645,202.2095 L689.2639,202.2095 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="86.4583" x="709.375" y="202.7669">BaseRepeater</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="679.1667" x2="801.0417" y1="213.737" y2="213.737"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="679.1667" x2="801.0417" y1="222.0703" y2="222.0703"/><!--MD5=[d366ac531d94add6ab38903d6804b189]
class BaseLexakaiDiagram--><rect codeLine="13" fill="#282828" height="87.5448" id="BaseLexakaiDiagram" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="229.1667" x="494.2708" y="859.9528"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="229.1667" x="494.2708" y="859.9528"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="229.1667" x="494.2708" y="883.0078"/><rect codeLine="13" fill="none" height="87.5448" id="BaseLexakaiDiagram" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="229.1667" x="494.2708" y="859.9528"/><ellipse cx="534.6354" cy="875.647" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M534.7493,872.349 L533.901,876.0783 L535.6038,876.0783 Z M533.6507,870.7011 L535.8541,870.7011 L538.3138,879.8136 L536.5133,879.8136 L535.9517,877.5614 L533.5409,877.5614 L532.9915,879.8136 L531.191,879.8136 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="134.375" x="557.0313" y="880.3711">BaseLexakaiDiagram</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="495.3125" x2="722.3958" y1="891.3411" y2="891.3411"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="495.3125" x2="722.3958" y1="899.6745" y2="899.6745"/><ellipse cx="505.7292" cy="911.1328" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="122.9167" x="517.1875" y="918.044">String uml(String title)</text><polygon fill="#FFFF44" points="505.7292,925.6694,509.8958,929.836,505.7292,934.0027,501.5625,929.836" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="196.875" x="517.1875" y="937.7889">void onUml(IndentingStringBuilder)</text><!--MD5=[7c5c88a606935469d5f89b0b5794816c]
class Named--><rect codeLine="9" fill="#282828" height="48.055" id="Named" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="82.2917" x="1329.1667" y="879.7445"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="82.2917" x="1329.1667" y="879.7445"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="82.2917" x="1329.1667" y="902.7995"/><rect codeLine="9" fill="none" height="48.055" id="Named" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="82.2917" x="1329.1667" y="879.7445"/><ellipse cx="1343.75" cy="895.4386" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1340.6331,892.6005 L1340.6331,891.0136 L1346.0592,891.0136 L1346.0592,892.6005 L1344.2464,892.6005 L1344.2464,898.5392 L1346.0592,898.5392 L1346.0592,900.1261 L1340.6331,900.1261 L1340.6331,898.5392 L1342.4459,898.5392 L1342.4459,892.6005 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="44.7917" x="1360.4167" y="900.1628">Named</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1330.2083" x2="1410.4167" y1="911.1328" y2="911.1328"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1330.2083" x2="1410.4167" y1="919.4661" y2="919.4661"/><!--MD5=[7a4729d26b999f6a4650b01106c103c5]
class Comparable--><rect codeLine="10" fill="#282828" height="48.055" id="Comparable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="115.625" x="927.0833" y="182.3486"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="115.625" x="927.0833" y="182.3486"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="115.625" x="927.0833" y="205.4036"/><rect codeLine="10" fill="none" height="48.055" id="Comparable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="115.625" x="927.0833" y="182.3486"/><ellipse cx="941.6667" cy="198.0428" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M938.5498,195.2047 L938.5498,193.6178 L943.9758,193.6178 L943.9758,195.2047 L942.1631,195.2047 L942.1631,201.1434 L943.9758,201.1434 L943.9758,202.7303 L938.5498,202.7303 L938.5498,201.1434 L940.3625,201.1434 L940.3625,195.2047 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="78.125" x="958.3333" y="202.7669">Comparable</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="928.125" x2="1041.6667" y1="213.737" y2="213.737"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="928.125" x2="1041.6667" y1="222.0703" y2="222.0703"/><!--MD5=[0b4e4b4980470ea387cc45de9bd14b5b]
class Application--><rect fill="#282828" height="48.055" id="Application" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="111.4583" x="1498.9583" y="182.3486"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="111.4583" x="1498.9583" y="182.3486"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="111.4583" x="1498.9583" y="205.4036"/><rect fill="none" height="48.055" id="Application" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="111.4583" x="1498.9583" y="182.3486"/><ellipse cx="1513.5417" cy="198.0428" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1515.4521,202.4679 Q1515.0248,202.6876 1514.5549,202.7974 Q1514.0849,202.9073 1513.5661,202.9073 Q1511.7228,202.9073 1510.7524,201.6927 Q1509.7819,200.4781 1509.7819,198.1832 Q1509.7819,195.8822 1510.7524,194.6676 Q1511.7228,193.453 1513.5661,193.453 Q1514.0849,193.453 1514.561,193.5628 Q1515.037,193.6727 1515.4521,193.8924 L1515.4521,195.8944 Q1514.9882,195.4671 1514.5518,195.2688 Q1514.1154,195.0704 1513.6515,195.0704 Q1512.6628,195.0704 1512.1592,195.8547 Q1511.6557,196.639 1511.6557,198.1832 Q1511.6557,199.7213 1512.1592,200.5056 Q1512.6628,201.2899 1513.6515,201.2899 Q1514.1154,201.2899 1514.5518,201.0915 Q1514.9882,200.8931 1515.4521,200.4659 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="73.9583" x="1530.2083" y="202.7669">Application</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1500" x2="1609.375" y1="213.737" y2="213.737"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1500" x2="1609.375" y1="222.0703" y2="222.0703"/><!--MD5=[71ba3f8efe45f4767ee229c95530b131]
class Lexakai--><rect codeLine="21" fill="#282828" height="194.6025" id="Lexakai" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="212.5" x="1448.4375" y="806.307"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="212.5" x="1448.4375" y="806.307"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="212.5" x="1448.4375" y="829.362"/><rect codeLine="21" fill="none" height="194.6025" id="Lexakai" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="212.5" x="1448.4375" y="806.307"/><ellipse cx="1522.9167" cy="822.0011" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1524.8271,826.4262 Q1524.3998,826.6459 1523.9299,826.7558 Q1523.4599,826.8656 1522.9411,826.8656 Q1521.0978,826.8656 1520.1274,825.651 Q1519.1569,824.4364 1519.1569,822.1415 Q1519.1569,819.8405 1520.1274,818.6259 Q1521.0978,817.4113 1522.9411,817.4113 Q1523.4599,817.4113 1523.936,817.5212 Q1524.412,817.631 1524.8271,817.8507 L1524.8271,819.8527 Q1524.3632,819.4255 1523.9268,819.2271 Q1523.4904,819.0287 1523.0265,819.0287 Q1522.0378,819.0287 1521.5342,819.813 Q1521.0307,820.5973 1521.0307,822.1415 Q1521.0307,823.6796 1521.5342,824.4639 Q1522.0378,825.2482 1523.0265,825.2482 Q1523.4904,825.2482 1523.9268,825.0498 Q1524.3632,824.8515 1524.8271,824.4242 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="48.9583" x="1545.8333" y="826.7253">Lexakai</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1449.4792" x2="1659.8958" y1="837.6953" y2="837.6953"/><polygon fill="#FFFF44" points="1459.8958,867.8569,1464.0625,872.0235,1459.8958,876.1902,1455.7292,872.0235" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="1471.3542" y="879.9764">Lexakai()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1449.4792" x2="1510.9375" y1="855.9011" y2="855.9011"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1514.0625" y="859.7107">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1598.4375" x2="1659.8958" y1="855.9011" y2="855.9011"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1449.4792" x2="1659.8958" y1="889.6851" y2="889.6851"/><ellipse cx="1459.8958" cy="901.1434" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="70.8333" x="1471.3542" y="908.0546">Lexakai get()</text><ellipse cx="1459.8958" cy="920.8883" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="167.7083" x="1471.3542" y="927.7995">void main(String[] arguments)</text><ellipse cx="1459.8958" cy="940.6331" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="166.6667" x="1471.3542" y="947.5444">LexakaiProject project(Folder)</text><ellipse cx="1459.8958" cy="984.2896" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="180.2083" x="1471.3542" y="991.2008">CopyMode resourceCopyMode()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1449.4792" x2="1519.2708" y1="967.1254" y2="967.1254"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="1522.3958" y="970.9351">(filesystem)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1590.1042" x2="1659.8958" y1="967.1254" y2="967.1254"/><!--MD5=[cd91c464fa9582b032e673759c376552]
class LexakaiClassDiagram--><rect codeLine="35" fill="#282828" height="586.4217" id="LexakaiClassDiagram" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="466.6667" x="755.7292" y="1448.4945"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="466.6667" x="755.7292" y="1448.4945"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="466.6667" x="755.7292" y="1471.5495"/><rect codeLine="35" fill="none" height="586.4217" id="LexakaiClassDiagram" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="466.6667" x="755.7292" y="1448.4945"/><ellipse cx="911.9792" cy="1464.1886" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M913.8896,1468.6137 Q913.4623,1468.8334 912.9924,1468.9433 Q912.5224,1469.0531 912.0036,1469.0531 Q910.1603,1469.0531 909.1899,1467.8385 Q908.2194,1466.6239 908.2194,1464.329 Q908.2194,1462.028 909.1899,1460.8134 Q910.1603,1459.5988 912.0036,1459.5988 Q912.5224,1459.5988 912.9985,1459.7087 Q913.4745,1459.8185 913.8896,1460.0382 L913.8896,1462.0402 Q913.4257,1461.613 912.9893,1461.4146 Q912.5529,1461.2162 912.089,1461.2162 Q911.1003,1461.2162 910.5967,1462.0005 Q910.0932,1462.7848 910.0932,1464.329 Q910.0932,1465.8671 910.5967,1466.6514 Q911.1003,1467.4357 912.089,1467.4357 Q912.5529,1467.4357 912.9893,1467.2373 Q913.4257,1467.039 913.8896,1466.6117 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="139.5833" x="934.8958" y="1468.9128">LexakaiClassDiagram</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="756.7708" x2="1221.3542" y1="1479.8828" y2="1479.8828"/><ellipse cx="767.1875" cy="1515.2527" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="246.875" x="778.6458" y="1522.1639">LexakaiClassDiagram(LexakaiProject, String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="756.7708" x2="945.3125" y1="1498.0886" y2="1498.0886"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="948.4375" y="1501.8982">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1032.8125" x2="1221.3542" y1="1498.0886" y2="1498.0886"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="756.7708" x2="1221.3542" y1="1531.8726" y2="1531.8726"/><ellipse cx="767.1875" cy="1543.3309" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="194.7917" x="778.6458" y="1550.2421">boolean automaticMethodGroups()</text><ellipse cx="767.1875" cy="1563.0758" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="778.6458" y="1569.987">boolean has(UmlInheritance)</text><ellipse cx="767.1875" cy="1582.8206" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="131.25" x="778.6458" y="1589.7319">LexakaiProject project()</text><ellipse cx="767.1875" cy="1602.5655" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="192.7083" x="778.6458" y="1609.4767">Set&lt;String&gt; qualifiedTypeNames()</text><ellipse cx="767.1875" cy="1622.3104" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="178.125" x="778.6458" y="1629.2216">Referent referent(Type referent)</text><ellipse cx="767.1875" cy="1642.0553" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="65.625" x="778.6458" y="1648.9665">String title()</text><ellipse cx="767.1875" cy="1685.7117" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="157.2917" x="778.6458" y="1692.6229">boolean isPackageDiagram()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="756.7708" x2="962.5" y1="1668.5476" y2="1668.5476"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="965.625" y="1672.3572">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1015.625" x2="1221.3542" y1="1668.5476" y2="1668.5476"/><ellipse cx="767.1875" cy="1729.3681" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="229.1667" x="778.6458" y="1736.2793">HashSet&lt;String&gt; abstractSuperClasses()</text><ellipse cx="767.1875" cy="1749.113" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="161.4583" x="778.6458" y="1756.0242">boolean add(UmlInheritance)</text><ellipse cx="767.1875" cy="1768.8578" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="365.625" x="778.6458" y="1775.769">List&lt;MethodDeclaration&gt; includedMethods(TypeDeclaration&lt;?&gt;)</text><ellipse cx="767.1875" cy="1788.6027" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="230.2083" x="778.6458" y="1795.5139">List&lt;UmlType&gt; includedQualifiedTypes()</text><ellipse cx="767.1875" cy="1808.3476" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="778.6458" y="1815.2588">boolean isEmpty()</text><ellipse cx="767.1875" cy="1828.0924" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="198.9583" x="778.6458" y="1835.0037">HashSet&lt;Object&gt; superInterfaces()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="756.7708" x2="954.6875" y1="1712.204" y2="1712.204"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="957.8125" y="1716.0136">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1023.4375" x2="1221.3542" y1="1712.204" y2="1712.204"/><ellipse cx="767.1875" cy="1871.7489" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="778.6458" y="1878.6601">void include(UmlType)</text><ellipse cx="767.1875" cy="1891.4937" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="262.5" x="778.6458" y="1898.4049">boolean includeMembers(TypeDeclaration&lt;?&gt;)</text><ellipse cx="767.1875" cy="1911.2386" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="266.6667" x="778.6458" y="1918.1498">boolean includeOverrides(TypeDeclaration&lt;?&gt;)</text><ellipse cx="767.1875" cy="1930.9835" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="434.375" x="778.6458" y="1937.8947">void includedMethods(TypeDeclaration&lt;?&gt;, Consumer&lt;MethodDeclaration&gt;)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="756.7708" x2="959.8958" y1="1854.5848" y2="1854.5848"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="963.0208" y="1858.3944">(filtering)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1018.2292" x2="1221.3542" y1="1854.5848" y2="1854.5848"/><ellipse cx="767.1875" cy="1974.6399" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="778.6458" y="1981.5511">String identifier()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="756.7708" x2="960.9375" y1="1957.4758" y2="1957.4758"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="964.0625" y="1961.2854">(identity)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1017.1875" x2="1221.3542" y1="1957.4758" y2="1957.4758"/><ellipse cx="767.1875" cy="2018.2963" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="303.125" x="778.6458" y="2025.2075">boolean includesQualifiedTypeName(String typeName)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="756.7708" x2="960.9375" y1="2001.1322" y2="2001.1322"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="964.0625" y="2004.9418">(naming)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1017.1875" x2="1221.3542" y1="2001.1322" y2="2001.1322"/><!--MD5=[0a3ce8fd96b244d9fb97109c62f8cd04]
class LexakaiProject--><rect codeLine="69" fill="#282828" height="962.6628" id="LexakaiProject" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="448.9583" x="760.4167" y="422.4528"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="448.9583" x="760.4167" y="422.4528"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="448.9583" x="760.4167" y="445.5078"/><rect codeLine="69" fill="none" height="962.6628" id="LexakaiProject" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="448.9583" x="760.4167" y="422.4528"/><ellipse cx="931.25" cy="438.147" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M933.1604,442.572 Q932.7332,442.7917 932.2632,442.9016 Q931.7932,443.0115 931.2744,443.0115 Q929.4312,443.0115 928.4607,441.7969 Q927.4902,440.5823 927.4902,438.2874 Q927.4902,435.9863 928.4607,434.7717 Q929.4312,433.5571 931.2744,433.5571 Q931.7932,433.5571 932.2693,433.667 Q932.7454,433.7769 933.1604,433.9966 L933.1604,435.9985 Q932.6965,435.5713 932.2601,435.3729 Q931.8237,435.1746 931.3599,435.1746 Q930.3711,435.1746 929.8676,435.9589 Q929.364,436.7432 929.364,438.2874 Q929.364,439.8254 929.8676,440.6097 Q930.3711,441.394 931.3599,441.394 Q931.8237,441.394 932.2601,441.1957 Q932.6965,440.9973 933.1604,440.5701 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="92.7083" x="954.1667" y="442.8711">LexakaiProject</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="761.4583" x2="1208.3333" y1="453.8411" y2="453.8411"/><ellipse cx="771.875" cy="489.211" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="367.7083" x="783.3333" y="496.1222">LexakaiProject(Lexakai, Version, Folder, Folder, Folder, JavaParser)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="761.4583" x2="941.1458" y1="472.0469" y2="472.0469"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="944.2708" y="475.8565">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1028.6458" x2="1208.3333" y1="472.0469" y2="472.0469"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="761.4583" x2="1208.3333" y1="505.8309" y2="505.8309"/><ellipse cx="771.875" cy="517.2892" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="194.7917" x="783.3333" y="524.2004">boolean automaticMethodGroups()</text><ellipse cx="771.875" cy="537.0341" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="416.6667" x="783.3333" y="543.9453">LexakaiProject automaticMethodGroups(boolean automaticMethodGroups)</text><ellipse cx="771.875" cy="556.779" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="229.1667" x="783.3333" y="563.6902">void diagramNames(Consumer&lt;String&gt;)</text><ellipse cx="771.875" cy="576.5238" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="283.3333" x="783.3333" y="583.4351">void diagrams(Consumer&lt;LexakaiClassDiagram&gt;)</text><ellipse cx="771.875" cy="596.2687" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="173.9583" x="783.3333" y="603.1799">Pattern javadocSectionPattern()</text><ellipse cx="771.875" cy="616.0136" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="254.1667" x="783.3333" y="622.9248">LexakaiProject javadocSectionPattern(Pattern)</text><ellipse cx="771.875" cy="635.7585" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="783.3333" y="642.6697">String link()</text><ellipse cx="771.875" cy="655.5033" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="207.2917" x="783.3333" y="662.4146">LexakaiProjectProperties properties()</text><ellipse cx="771.875" cy="675.2482" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="148.9583" x="783.3333" y="682.1594">String property(String key)</text><ellipse cx="771.875" cy="694.9931" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="320.8333" x="783.3333" y="701.9043">void typeDeclarations(Consumer&lt;TypeDeclaration&lt;?&gt;&gt;)</text><ellipse cx="771.875" cy="738.6495" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="364.5833" x="783.3333" y="745.5607">LexakaiProject buildPackageDiagrams(boolean packageDiagrams)</text><ellipse cx="771.875" cy="758.3944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="182.2917" x="783.3333" y="765.3056">boolean buildPackageDiagrams()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="761.4583" x2="954.6875" y1="721.4854" y2="721.4854"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="54.1667" x="957.8125" y="725.295">(building)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1015.1042" x2="1208.3333" y1="721.4854" y2="721.4854"/><ellipse cx="771.875" cy="802.0508" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="150" x="783.3333" y="808.962">boolean hasChildProjects()</text><ellipse cx="771.875" cy="821.7957" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="143.75" x="783.3333" y="828.7069">boolean hasSourceCode()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="761.4583" x2="958.3333" y1="784.8867" y2="784.8867"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="961.4583" y="788.6963">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1011.4583" x2="1208.3333" y1="784.8867" y2="784.8867"/><ellipse cx="771.875" cy="865.4521" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="151.0417" x="783.3333" y="872.3633">boolean addHtmlAnchors()</text><ellipse cx="771.875" cy="885.1969" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="329.1667" x="783.3333" y="892.1082">LexakaiProject addHtmlAnchors(boolean addHtmlAnchors)</text><ellipse cx="771.875" cy="904.9418" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="238.5417" x="783.3333" y="911.853">ObjectList&lt;LexakaiProject&gt; childProjects()</text><ellipse cx="771.875" cy="924.6867" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="354.1667" x="783.3333" y="931.5979">ObjectList&lt;JavadocCoverage&gt; nestedProjectJavadocCoverage()</text><ellipse cx="771.875" cy="944.4316" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="258.3333" x="783.3333" y="951.3428">List&lt;TypeDeclaration&lt;?&gt;&gt; typeDeclarations()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="761.4583" x2="950.5208" y1="848.288" y2="848.288"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="953.6458" y="852.0976">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1019.2708" x2="1208.3333" y1="848.288" y2="848.288"/><ellipse cx="771.875" cy="988.088" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="783.3333" y="994.9992">LexakaiProjectFiles files()</text><ellipse cx="771.875" cy="1007.8328" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="172.9167" x="783.3333" y="1014.7441">LexakaiProjectFolders folders()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="761.4583" x2="949.4792" y1="970.9239" y2="970.9239"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="952.6042" y="974.7335">(filesystem)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1020.3125" x2="1208.3333" y1="970.9239" y2="970.9239"/><ellipse cx="771.875" cy="1051.4893" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="305.2083" x="783.3333" y="1058.4005">LexakaiProject includeObjectMethods(boolean include)</text><ellipse cx="771.875" cy="1071.2341" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="181.25" x="783.3333" y="1078.1453">boolean includeObjectMethods()</text><ellipse cx="771.875" cy="1090.979" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="321.875" x="783.3333" y="1097.8902">LexakaiProject includeProtectedMethods(boolean include)</text><ellipse cx="771.875" cy="1110.7239" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="197.9167" x="783.3333" y="1117.6351">boolean includeProtectedMethods()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="761.4583" x2="955.7292" y1="1034.3252" y2="1034.3252"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="958.8542" y="1038.1348">(filtering)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1014.0625" x2="1208.3333" y1="1034.3252" y2="1034.3252"/><ellipse cx="771.875" cy="1154.3803" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="783.3333" y="1161.2915">Version version()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="761.4583" x2="956.7708" y1="1137.2162" y2="1137.2162"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="959.8958" y="1141.0258">(identity)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1013.0208" x2="1208.3333" y1="1137.2162" y2="1137.2162"/><ellipse cx="771.875" cy="1198.0367" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="783.3333" y="1204.9479">void initialize()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="761.4583" x2="955.2083" y1="1180.8726" y2="1180.8726"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="958.3333" y="1184.6822">(lifecycle)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1014.5833" x2="1208.3333" y1="1180.8726" y2="1180.8726"/><ellipse cx="771.875" cy="1241.6931" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="231.25" x="783.3333" y="1248.6043">Percent averageProjectJavadocCoverage()</text><ellipse cx="771.875" cy="1261.438" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="236.4583" x="783.3333" y="1268.3492">String meterMarkdownForPercent(Percent)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="761.4583" x2="963.5417" y1="1224.529" y2="1224.529"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="966.6667" y="1228.3386">(math)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1006.25" x2="1208.3333" y1="1224.529" y2="1224.529"/><ellipse cx="771.875" cy="1305.0944" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="75" x="783.3333" y="1312.0056">String name()</text><ellipse cx="771.875" cy="1324.8393" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="138.5417" x="783.3333" y="1331.7505">String rootProjectName()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="761.4583" x2="956.7708" y1="1287.9303" y2="1287.9303"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="959.8958" y="1291.7399">(naming)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1013.0208" x2="1208.3333" y1="1287.9303" y2="1287.9303"/><ellipse cx="771.875" cy="1368.4957" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="116.6667" x="783.3333" y="1375.4069">void updateReadMe()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="761.4583" x2="965.1042" y1="1351.3316" y2="1351.3316"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="968.2292" y="1355.1412">(read)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1004.6875" x2="1208.3333" y1="1351.3316" y2="1351.3316"/><!--MD5=[d6b55f982ca60ed004895efb66d60ed4]
class LexakaiProjectFiles--><rect codeLine="118" fill="#282828" height="206.014" id="LexakaiProjectFiles" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="226.0417" x="11.4583" y="103.182"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="226.0417" x="11.4583" y="103.182"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="226.0417" x="11.4583" y="126.237"/><rect codeLine="118" fill="none" height="206.014" id="LexakaiProjectFiles" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="226.0417" x="11.4583" y="103.182"/><ellipse cx="55.7292" cy="118.8761" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M57.6396,123.3012 Q57.2123,123.5209 56.7424,123.6308 Q56.2724,123.7406 55.7536,123.7406 Q53.9103,123.7406 52.9399,122.526 Q51.9694,121.3114 51.9694,119.0165 Q51.9694,116.7155 52.9399,115.5009 Q53.9103,114.2863 55.7536,114.2863 Q56.2724,114.2863 56.7485,114.3962 Q57.2245,114.506 57.6396,114.7257 L57.6396,116.7277 Q57.1757,116.3005 56.7393,116.1021 Q56.3029,115.9037 55.839,115.9037 Q54.8503,115.9037 54.3467,116.688 Q53.8432,117.4723 53.8432,119.0165 Q53.8432,120.5546 54.3467,121.3389 Q54.8503,122.1232 55.839,122.1232 Q56.3029,122.1232 56.7393,121.9248 Q57.1757,121.7265 57.6396,121.2992 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="122.9167" x="78.6458" y="123.6003">LexakaiProjectFiles</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="12.5" x2="236.4583" y1="134.5703" y2="134.5703"/><ellipse cx="22.9167" cy="169.9402" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="193.75" x="34.375" y="176.8514">LexakaiProjectFiles(LexakaiProject)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="12.5" x2="80.7292" y1="152.7761" y2="152.7761"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="83.8542" y="156.5857">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="168.2292" x2="236.4583" y1="152.7761" y2="152.7761"/><ellipse cx="22.9167" cy="213.5966" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="166.6667" x="34.375" y="220.5078">File outputLexakaiProperties()</text><ellipse cx="22.9167" cy="233.3415" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="154.1667" x="34.375" y="240.2527">File outputLexakaiSettings()</text><ellipse cx="22.9167" cy="253.0863" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="121.875" x="34.375" y="259.9976">File readMeTemplate()</text><ellipse cx="22.9167" cy="272.8312" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="71.875" x="34.375" y="279.7424">File readme()</text><ellipse cx="22.9167" cy="292.5761" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="164.5833" x="34.375" y="299.4873">File sourceProjectProperties()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="12.5" x2="89.0625" y1="196.4325" y2="196.4325"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="92.1875" y="200.2421">(filesystem)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="159.8958" x2="236.4583" y1="196.4325" y2="196.4325"/><!--MD5=[24ed06dcb965a566c6f2d113db217ea3]
class LexakaiProjectFolders--><rect codeLine="130" fill="#282828" height="304.7384" id="LexakaiProjectFolders" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="367.7083" x="273.9583" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="367.7083" x="273.9583" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="367.7083" x="273.9583" y="76.7578"/><rect codeLine="130" fill="none" height="304.7384" id="LexakaiProjectFolders" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="367.7083" x="273.9583" y="53.7028"/><ellipse cx="380.2083" cy="69.397" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M382.1187,73.822 Q381.6915,74.0417 381.2215,74.1516 Q380.7515,74.2615 380.2327,74.2615 Q378.3895,74.2615 377.419,73.0469 Q376.4486,71.8323 376.4486,69.5374 Q376.4486,67.2363 377.419,66.0217 Q378.3895,64.8071 380.2327,64.8071 Q380.7515,64.8071 381.2276,64.917 Q381.7037,65.0269 382.1187,65.2466 L382.1187,67.2485 Q381.6549,66.8213 381.2185,66.6229 Q380.7821,66.4246 380.3182,66.4246 Q379.3294,66.4246 378.8259,67.2089 Q378.3223,67.9932 378.3223,69.5374 Q378.3223,71.0754 378.8259,71.8597 Q379.3294,72.644 380.3182,72.644 Q380.7821,72.644 381.2185,72.4457 Q381.6549,72.2473 382.1187,71.8201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="140.625" x="403.125" y="74.1211">LexakaiProjectFolders</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="275" x2="640.625" y1="85.0911" y2="85.0911"/><ellipse cx="285.4167" cy="120.461" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="335.4167" x="296.875" y="127.3722">LexakaiProjectFolders(LexakaiProject, Folder, Folder, Folder)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="275" x2="414.0625" y1="103.2969" y2="103.2969"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="417.1875" y="107.1065">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="501.5625" x2="640.625" y1="103.2969" y2="103.2969"/><ellipse cx="285.4167" cy="164.1174" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="86.4583" x="296.875" y="171.0286">Folder images()</text><ellipse cx="285.4167" cy="183.8623" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="84.375" x="296.875" y="190.7735">Folder output()</text><ellipse cx="285.4167" cy="203.6072" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="137.5" x="296.875" y="210.5184">Folder outputDiagrams()</text><ellipse cx="285.4167" cy="223.3521" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="169.7917" x="296.875" y="230.2633">Folder outputDocumentation()</text><ellipse cx="285.4167" cy="243.0969" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="126.0417" x="296.875" y="250.0081">Folder outputLexakai()</text><ellipse cx="285.4167" cy="262.8418" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="110.4167" x="296.875" y="269.753">Folder outputRoot()</text><ellipse cx="285.4167" cy="282.5867" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="70.8333" x="296.875" y="289.4979">Folder root()</text><ellipse cx="285.4167" cy="302.3315" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="120.8333" x="296.875" y="309.2428">Folder sourceFolder()</text><ellipse cx="285.4167" cy="322.0764" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="123.9583" x="296.875" y="328.9876">Folder sourceProject()</text><ellipse cx="285.4167" cy="341.8213" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="166.6667" x="296.875" y="348.7325">Folder sourceRelativeProject()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="275" x2="422.3958" y1="146.9533" y2="146.9533"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="425.5208" y="150.7629">(filesystem)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="493.2292" x2="640.625" y1="146.9533" y2="146.9533"/><!--MD5=[e9c68631d2db108d1e4f6719668fa91b]
class PropertyMap--><rect fill="#282828" height="48.055" id="PropertyMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="118.75" x="1767.1875" y="182.3486"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="118.75" x="1767.1875" y="182.3486"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="118.75" x="1767.1875" y="205.4036"/><rect fill="none" height="48.055" id="PropertyMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="118.75" x="1767.1875" y="182.3486"/><ellipse cx="1781.7708" cy="198.0428" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1783.6812,202.4679 Q1783.254,202.6876 1782.784,202.7974 Q1782.314,202.9073 1781.7952,202.9073 Q1779.952,202.9073 1778.9815,201.6927 Q1778.0111,200.4781 1778.0111,198.1832 Q1778.0111,195.8822 1778.9815,194.6676 Q1779.952,193.453 1781.7952,193.453 Q1782.314,193.453 1782.7901,193.5628 Q1783.2662,193.6727 1783.6812,193.8924 L1783.6812,195.8944 Q1783.2174,195.4671 1782.781,195.2688 Q1782.3446,195.0704 1781.8807,195.0704 Q1780.8919,195.0704 1780.3884,195.8547 Q1779.8848,196.639 1779.8848,198.1832 Q1779.8848,199.7213 1780.3884,200.5056 Q1780.8919,201.2899 1781.8807,201.2899 Q1782.3446,201.2899 1782.781,201.0915 Q1783.2174,200.8931 1783.6812,200.4659 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="81.25" x="1798.4375" y="202.7669">PropertyMap</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1768.2292" x2="1884.8958" y1="213.737" y2="213.737"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1768.2292" x2="1884.8958" y1="222.0703" y2="222.0703"/><!--MD5=[58e2258718aefc6d74a9ae5dbe47ca35]
class LexakaiProjectProperties--><rect codeLine="148" fill="#282828" height="301.6602" id="LexakaiProjectProperties" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="258.3333" x="1697.3958" y="752.6611"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="258.3333" x="1697.3958" y="752.6611"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="258.3333" x="1697.3958" y="775.7161"/><rect codeLine="148" fill="none" height="301.6602" id="LexakaiProjectProperties" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="258.3333" x="1697.3958" y="752.6611"/><ellipse cx="1740.1042" cy="768.3553" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1742.0146,772.7804 Q1741.5873,773.0001 1741.1174,773.1099 Q1740.6474,773.2198 1740.1286,773.2198 Q1738.2853,773.2198 1737.3149,772.0052 Q1736.3444,770.7906 1736.3444,768.4957 Q1736.3444,766.1947 1737.3149,764.9801 Q1738.2853,763.7655 1740.1286,763.7655 Q1740.6474,763.7655 1741.1235,763.8753 Q1741.5995,763.9852 1742.0146,764.2049 L1742.0146,766.2069 Q1741.5507,765.7796 1741.1143,765.5813 Q1740.6779,765.3829 1740.214,765.3829 Q1739.2253,765.3829 1738.7217,766.1672 Q1738.2182,766.9515 1738.2182,768.4957 Q1738.2182,770.0338 1738.7217,770.8181 Q1739.2253,771.6024 1740.214,771.6024 Q1740.6779,771.6024 1741.1143,771.404 Q1741.5507,771.2056 1742.0146,770.7784 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="158.3333" x="1763.0208" y="773.0794">LexakaiProjectProperties</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1698.4375" x2="1954.6875" y1="784.0495" y2="784.0495"/><ellipse cx="1708.8542" cy="819.4194" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="226.0417" x="1720.3125" y="826.3306">LexakaiProjectProperties(LexakaiProject)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1698.4375" x2="1782.8125" y1="802.2552" y2="802.2552"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1785.9375" y="806.0649">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1870.3125" x2="1954.6875" y1="802.2552" y2="802.2552"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1698.4375" x2="1954.6875" y1="836.0392" y2="836.0392"/><ellipse cx="1708.8542" cy="847.4976" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="132.2917" x="1720.3125" y="854.4088">String imagesLocation()</text><ellipse cx="1708.8542" cy="891.154" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="136.4583" x="1720.3125" y="898.0652">String projectArtifactId()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1698.4375" x2="1798.4375" y1="873.9899" y2="873.9899"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="1801.5625" y="877.7995">(identity)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1854.6875" x2="1954.6875" y1="873.9899" y2="873.9899"/><ellipse cx="1708.8542" cy="934.8104" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="156.25" x="1720.3125" y="941.7216">String projectModuleName()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1698.4375" x2="1798.4375" y1="917.6463" y2="917.6463"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="1801.5625" y="921.4559">(naming)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1854.6875" x2="1954.6875" y1="917.6463" y2="917.6463"/><ellipse cx="1708.8542" cy="978.4668" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="183.3333" x="1720.3125" y="985.378">String outputDiagramsLocation()</text><ellipse cx="1708.8542" cy="998.2117" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="215.625" x="1720.3125" y="1005.1229">String outputDocumentationLocation()</text><ellipse cx="1708.8542" cy="1017.9565" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="172.9167" x="1720.3125" y="1024.8678">String outputJavadocLocation()</text><ellipse cx="1708.8542" cy="1037.7014" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="221.875" x="1720.3125" y="1044.6126">String outputJavadocLocation(UmlType)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1698.4375" x2="1805.7292" y1="961.3027" y2="961.3027"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="35.4167" x="1808.8542" y="965.1123">(write)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1847.3958" x2="1954.6875" y1="961.3027" y2="961.3027"/><!--MD5=[e90ef443e2de7449fab3197113b43b47]
class LexakaiClassDiagram.Referent--><rect codeLine="165" fill="#282828" height="131.2012" id="LexakaiClassDiagram.Referent" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="234.375" x="7.2917" y="838.0778"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="234.375" x="7.2917" y="838.0778"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="234.375" x="7.2917" y="861.1328"/><rect codeLine="165" fill="none" height="131.2012" id="LexakaiClassDiagram.Referent" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="234.375" x="7.2917" y="838.0778"/><ellipse cx="21.875" cy="853.772" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M23.7854,858.197 Q23.3582,858.4167 22.8882,858.5266 Q22.4182,858.6365 21.8994,858.6365 Q20.0562,858.6365 19.0857,857.4219 Q18.1152,856.2073 18.1152,853.9124 Q18.1152,851.6113 19.0857,850.3967 Q20.0562,849.1821 21.8994,849.1821 Q22.4182,849.1821 22.8943,849.292 Q23.3704,849.4019 23.7854,849.6216 L23.7854,851.6235 Q23.3215,851.1963 22.8851,850.9979 Q22.4487,850.7996 21.9849,850.7996 Q20.9961,850.7996 20.4926,851.5839 Q19.989,852.3682 19.989,853.9124 Q19.989,855.4504 20.4926,856.2347 Q20.9961,857.019 21.9849,857.019 Q22.4487,857.019 22.8851,856.8207 Q23.3215,856.6223 23.7854,856.1951 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="196.875" x="38.5417" y="858.4961">LexakaiClassDiagram.Referent</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="8.3333" x2="240.625" y1="869.4661" y2="869.4661"/><ellipse cx="18.75" cy="904.836" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="121.875" x="30.2083" y="911.7472">Referent(String, Type)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="80.7292" y1="887.6719" y2="887.6719"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="83.8542" y="891.4815">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="168.2292" x2="240.625" y1="887.6719" y2="887.6719"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="240.625" y1="921.4559" y2="921.4559"/><ellipse cx="18.75" cy="932.9142" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="103.125" x="30.2083" y="939.8254">String cardinality()</text><ellipse cx="18.75" cy="952.6591" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="83.3333" x="30.2083" y="959.5703">Type referent()</text><!--MD5=[d577b87d57838e1c1e0781a982567153]
reverse link BaseRepeater to BaseLexakaiDiagram--><path codeLine="12" d="M731.8542,251.0361 C708.2188,376.2445 640.4271,735.4007 616.9583,859.7028 " fill="none" id="BaseRepeater-backto-BaseLexakaiDiagram" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="724.7083,249.5986,735.7396,230.484,739.0417,252.307,724.7083,249.5986" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[1a1431ce37d8053f400fb8f8766fec82]
reverse link Application to Lexakai--><path codeLine="20" d="M1554.6875,251.5361 C1554.6875,362.2653 1554.6875,653.6507 1554.6875,806.2861 " fill="none" id="Application-backto-Lexakai" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1547.3958,251.3174,1554.6875,230.484,1561.9792,251.3174,1547.3958,251.3174" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[fa551b829565ba58f1de5fa1b0985ed4]
reverse link BaseLexakaiDiagram to LexakaiClassDiagram--><path codeLine="33" d="M619.4271,968.182 C636.6771,1062.3903 675.7604,1243.4007 742.1875,1384.9528 C752.0833,1406.0465 763.2083,1427.2549 775.1146,1448.2236 " fill="none" id="BaseLexakaiDiagram-backto-LexakaiClassDiagram" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="612.2292,969.3174,615.75,947.5257,626.5833,966.7549,612.2292,969.3174" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[71641bad2aa654f1bc64e2946986b1b1]
reverse link Named to LexakaiClassDiagram--><path codeLine="34" d="M1373.4583,948.984 C1377.8854,1036.5778 1378.9063,1236.4632 1310.9375,1384.9528 C1288.5833,1433.7965 1257.0521,1480.609 1222.4063,1523.3174 " fill="none" id="Named-backto-LexakaiClassDiagram" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1366.1771,949.307,1372.2188,928.0778,1380.7292,948.4424,1366.1771,949.307" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[ee932fd7f1e0a70ce902c840e2ec0ec6]
reverse link BaseRepeater to LexakaiProject--><path codeLine="66" d="M755.1771,250.1715 C768.9167,289.1924 790.8333,351.4424 815.7917,422.3382 " fill="none" id="BaseRepeater-backto-LexakaiProject" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="748.2917,252.557,748.25,230.484,762.0417,247.7132,748.2917,252.557" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[7833d3205852db5b5922448a307d98f4]
reverse link Comparable to LexakaiProject--><path codeLine="67" d="M984.8958,251.5465 C984.8958,290.6403 984.8958,352.2653 984.8958,422.3382 " fill="none" id="Comparable-backto-LexakaiProject" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="977.6042,251.3174,984.8958,230.484,992.1875,251.3174,977.6042,251.3174" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[b04245787456317ee4873214d554c407]
link LexakaiProject to LexakaiProject--><path codeLine="68" d="M1209.4479,825.3486 C1231.6875,841.0465 1245.8333,867.1715 1245.8333,903.7028 C1245.8333,937.6715 1233.6042,962.6299 1214.0208,978.5882 " fill="none" id="LexakaiProject-to-LexakaiProject" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="#545454" points="1209.4479,982.057,1219.4387,979.7253,1213.602,978.9153,1214.412,973.0787,1209.4479,982.057" style="stroke:#545454;stroke-width:1.5625;"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="45.8333" x="1255.2083" y="908.4961">creates</text><!--MD5=[e18baa43b86e3bab14433b5af603ae2c]
reverse link PropertyMap to LexakaiProjectProperties--><path codeLine="147" d="M1826.5625,251.6195 C1826.5625,350.4528 1826.5625,592.9007 1826.5625,752.4215 " fill="none" id="PropertyMap-backto-LexakaiProjectProperties" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1819.2708,251.3174,1826.5625,230.484,1833.8542,251.3174,1819.2708,251.3174" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[7a3952b3419f0bd80a1cdd6028544a4e]
link LexakaiProjectFiles to LexakaiProjectFolders--><!--MD5=[9450d736431e6428d1ed33f3558bdfa4]
link LexakaiProjectFiles to LexakaiClassDiagram.Referent--><!--MD5=[2ffd07bdf117402fbe778c4bfe3a0d1d]
@startuml

    !include ../lexakai/lexakai.theme
    
    title "com.telenav.lexakai"
    
    abstract BaseRepeater
    abstract BaseLexakaiDiagram
    
    interface Named
    interface Comparable
    
    BaseRepeater <|- - BaseLexakaiDiagram
    abstract class BaseLexakaiDiagram
    {
        - -
        +String uml(String title)
        #void onUml(IndentingStringBuilder)
    }
    
    Application <|- - Lexakai
    class Lexakai
    {
        - -(constructors)- -
        #Lexakai()
        - -
        +Lexakai get()
        +void main(String[] arguments)
        +LexakaiProject project(Folder)
        - -(filesystem)- -
        +CopyMode resourceCopyMode()
    }
    
    BaseLexakaiDiagram <|- - LexakaiClassDiagram
    Named <|- - LexakaiClassDiagram
    class LexakaiClassDiagram
    {
        - -(constructors)- -
        +LexakaiClassDiagram(LexakaiProject, String)
        - -
        +boolean automaticMethodGroups()
        +boolean has(UmlInheritance)
        +LexakaiProject project()
        +Set<String> qualifiedTypeNames()
        +Referent referent(Type referent)
        +String title()
        - -(checks)- -
        +boolean isPackageDiagram()
        - -(collection)- -
        +HashSet<String> abstractSuperClasses()
        +boolean add(UmlInheritance)
        +List<MethodDeclaration> includedMethods(TypeDeclaration<?>)
        +List<UmlType> includedQualifiedTypes()
        +boolean isEmpty()
        +HashSet<Object> superInterfaces()
        - -(filtering)- -
        +void include(UmlType)
        +boolean includeMembers(TypeDeclaration<?>)
        +boolean includeOverrides(TypeDeclaration<?>)
        +void includedMethods(TypeDeclaration<?>, Consumer<MethodDeclaration>)
        - -(identity)- -
        +String identifier()
        - -(naming)- -
        +boolean includesQualifiedTypeName(String typeName)
    }
    
    BaseRepeater <|- - LexakaiProject
    Comparable <|- - LexakaiProject
    LexakaiProject - -> LexakaiProject : "creates"
    class LexakaiProject
    {
        - -(constructors)- -
        +LexakaiProject(Lexakai, Version, Folder, Folder, Folder, JavaParser)
        - -
        +boolean automaticMethodGroups()
        +LexakaiProject automaticMethodGroups(boolean automaticMethodGroups)
        +void diagramNames(Consumer<String>)
        +void diagrams(Consumer<LexakaiClassDiagram>)
        +Pattern javadocSectionPattern()
        +LexakaiProject javadocSectionPattern(Pattern)
        +String link()
        +LexakaiProjectProperties properties()
        +String property(String key)
        +void typeDeclarations(Consumer<TypeDeclaration<?>>)
        - -(building)- -
        +LexakaiProject buildPackageDiagrams(boolean packageDiagrams)
        +boolean buildPackageDiagrams()
        - -(checks)- -
        +boolean hasChildProjects()
        +boolean hasSourceCode()
        - -(collection)- -
        +boolean addHtmlAnchors()
        +LexakaiProject addHtmlAnchors(boolean addHtmlAnchors)
        +ObjectList<LexakaiProject> childProjects()
        +ObjectList<JavadocCoverage> nestedProjectJavadocCoverage()
        +List<TypeDeclaration<?>> typeDeclarations()
        - -(filesystem)- -
        +LexakaiProjectFiles files()
        +LexakaiProjectFolders folders()
        - -(filtering)- -
        +LexakaiProject includeObjectMethods(boolean include)
        +boolean includeObjectMethods()
        +LexakaiProject includeProtectedMethods(boolean include)
        +boolean includeProtectedMethods()
        - -(identity)- -
        +Version version()
        - -(lifecycle)- -
        +void initialize()
        - -(math)- -
        +Percent averageProjectJavadocCoverage()
        +String meterMarkdownForPercent(Percent)
        - -(naming)- -
        +String name()
        +String rootProjectName()
        - -(read)- -
        +void updateReadMe()
    }
    
    class LexakaiProjectFiles
    {
        - -(constructors)- -
        +LexakaiProjectFiles(LexakaiProject)
        - -(filesystem)- -
        +File outputLexakaiProperties()
        +File outputLexakaiSettings()
        +File readMeTemplate()
        +File readme()
        +File sourceProjectProperties()
    }
    
    class LexakaiProjectFolders
    {
        - -(constructors)- -
        +LexakaiProjectFolders(LexakaiProject, Folder, Folder, Folder)
        - -(filesystem)- -
        +Folder images()
        +Folder output()
        +Folder outputDiagrams()
        +Folder outputDocumentation()
        +Folder outputLexakai()
        +Folder outputRoot()
        +Folder root()
        +Folder sourceFolder()
        +Folder sourceProject()
        +Folder sourceRelativeProject()
    }
    
    PropertyMap <|- - LexakaiProjectProperties
    class LexakaiProjectProperties
    {
        - -(constructors)- -
        +LexakaiProjectProperties(LexakaiProject)
        - -
        +String imagesLocation()
        - -(identity)- -
        +String projectArtifactId()
        - -(naming)- -
        +String projectModuleName()
        - -(write)- -
        +String outputDiagramsLocation()
        +String outputDocumentationLocation()
        +String outputJavadocLocation()
        +String outputJavadocLocation(UmlType)
    }
    
    class LexakaiClassDiagram.Referent
    {
        - -(constructors)- -
        +Referent(String, Type)
        - -
        +String cardinality()
        +Type referent()
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.lexakai"
    
    abstract BaseRepeater
    abstract BaseLexakaiDiagram
    
    interface Named
    interface Comparable
    
    BaseRepeater <|- - BaseLexakaiDiagram
    abstract class BaseLexakaiDiagram
    {
        - -
        +String uml(String title)
        #void onUml(IndentingStringBuilder)
    }
    
    Application <|- - Lexakai
    class Lexakai
    {
        - -(constructors)- -
        #Lexakai()
        - -
        +Lexakai get()
        +void main(String[] arguments)
        +LexakaiProject project(Folder)
        - -(filesystem)- -
        +CopyMode resourceCopyMode()
    }
    
    BaseLexakaiDiagram <|- - LexakaiClassDiagram
    Named <|- - LexakaiClassDiagram
    class LexakaiClassDiagram
    {
        - -(constructors)- -
        +LexakaiClassDiagram(LexakaiProject, String)
        - -
        +boolean automaticMethodGroups()
        +boolean has(UmlInheritance)
        +LexakaiProject project()
        +Set<String> qualifiedTypeNames()
        +Referent referent(Type referent)
        +String title()
        - -(checks)- -
        +boolean isPackageDiagram()
        - -(collection)- -
        +HashSet<String> abstractSuperClasses()
        +boolean add(UmlInheritance)
        +List<MethodDeclaration> includedMethods(TypeDeclaration<?>)
        +List<UmlType> includedQualifiedTypes()
        +boolean isEmpty()
        +HashSet<Object> superInterfaces()
        - -(filtering)- -
        +void include(UmlType)
        +boolean includeMembers(TypeDeclaration<?>)
        +boolean includeOverrides(TypeDeclaration<?>)
        +void includedMethods(TypeDeclaration<?>, Consumer<MethodDeclaration>)
        - -(identity)- -
        +String identifier()
        - -(naming)- -
        +boolean includesQualifiedTypeName(String typeName)
    }
    
    BaseRepeater <|- - LexakaiProject
    Comparable <|- - LexakaiProject
    LexakaiProject - -> LexakaiProject : "creates"
    class LexakaiProject
    {
        - -(constructors)- -
        +LexakaiProject(Lexakai, Version, Folder, Folder, Folder, JavaParser)
        - -
        +boolean automaticMethodGroups()
        +LexakaiProject automaticMethodGroups(boolean automaticMethodGroups)
        +void diagramNames(Consumer<String>)
        +void diagrams(Consumer<LexakaiClassDiagram>)
        +Pattern javadocSectionPattern()
        +LexakaiProject javadocSectionPattern(Pattern)
        +String link()
        +LexakaiProjectProperties properties()
        +String property(String key)
        +void typeDeclarations(Consumer<TypeDeclaration<?>>)
        - -(building)- -
        +LexakaiProject buildPackageDiagrams(boolean packageDiagrams)
        +boolean buildPackageDiagrams()
        - -(checks)- -
        +boolean hasChildProjects()
        +boolean hasSourceCode()
        - -(collection)- -
        +boolean addHtmlAnchors()
        +LexakaiProject addHtmlAnchors(boolean addHtmlAnchors)
        +ObjectList<LexakaiProject> childProjects()
        +ObjectList<JavadocCoverage> nestedProjectJavadocCoverage()
        +List<TypeDeclaration<?>> typeDeclarations()
        - -(filesystem)- -
        +LexakaiProjectFiles files()
        +LexakaiProjectFolders folders()
        - -(filtering)- -
        +LexakaiProject includeObjectMethods(boolean include)
        +boolean includeObjectMethods()
        +LexakaiProject includeProtectedMethods(boolean include)
        +boolean includeProtectedMethods()
        - -(identity)- -
        +Version version()
        - -(lifecycle)- -
        +void initialize()
        - -(math)- -
        +Percent averageProjectJavadocCoverage()
        +String meterMarkdownForPercent(Percent)
        - -(naming)- -
        +String name()
        +String rootProjectName()
        - -(read)- -
        +void updateReadMe()
    }
    
    class LexakaiProjectFiles
    {
        - -(constructors)- -
        +LexakaiProjectFiles(LexakaiProject)
        - -(filesystem)- -
        +File outputLexakaiProperties()
        +File outputLexakaiSettings()
        +File readMeTemplate()
        +File readme()
        +File sourceProjectProperties()
    }
    
    class LexakaiProjectFolders
    {
        - -(constructors)- -
        +LexakaiProjectFolders(LexakaiProject, Folder, Folder, Folder)
        - -(filesystem)- -
        +Folder images()
        +Folder output()
        +Folder outputDiagrams()
        +Folder outputDocumentation()
        +Folder outputLexakai()
        +Folder outputRoot()
        +Folder root()
        +Folder sourceFolder()
        +Folder sourceProject()
        +Folder sourceRelativeProject()
    }
    
    PropertyMap <|- - LexakaiProjectProperties
    class LexakaiProjectProperties
    {
        - -(constructors)- -
        +LexakaiProjectProperties(LexakaiProject)
        - -
        +String imagesLocation()
        - -(identity)- -
        +String projectArtifactId()
        - -(naming)- -
        +String projectModuleName()
        - -(write)- -
        +String outputDiagramsLocation()
        +String outputDocumentationLocation()
        +String outputJavadocLocation()
        +String outputJavadocLocation(UmlType)
    }
    
    class LexakaiClassDiagram.Referent
    {
        - -(constructors)- -
        +Referent(String, Type)
        - -
        +String cardinality()
        +Type referent()
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>