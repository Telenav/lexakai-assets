<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="2021.875px" preserveAspectRatio="none" style="width:1962px;height:2021px;background:#333333;" version="1.1" viewBox="0 0 1962 2021" width="1962.5px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="220.8333" x="863.8021" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="197.9167" x="875.2604" y="30.5583">com.telenav.lexakai</text><!--MD5=[762aa3d0df6a9d47bd8e105afbd066b5]
class BaseRepeater--><rect codeLine="6" fill="#282828" height="48.055" id="BaseRepeater" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="123.9583" x="678.125" y="172.4528"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="123.9583" x="678.125" y="172.4528"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="123.9583" x="678.125" y="195.5078"/><rect codeLine="6" fill="none" height="48.055" id="BaseRepeater" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="123.9583" x="678.125" y="172.4528"/><ellipse cx="692.7083" cy="188.147" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M692.8223,184.849 L691.9739,188.5783 L693.6768,188.5783 Z M691.7236,183.2011 L693.927,183.2011 L696.3867,192.3136 L694.5862,192.3136 L694.0247,190.0614 L691.6138,190.0614 L691.0645,192.3136 L689.2639,192.3136 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="86.4583" x="709.375" y="192.8711">BaseRepeater</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="679.1667" x2="801.0417" y1="203.8411" y2="203.8411"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="679.1667" x2="801.0417" y1="212.1745" y2="212.1745"/><!--MD5=[d366ac531d94add6ab38903d6804b189]
class BaseLexakaiDiagram--><rect codeLine="13" fill="#282828" height="87.5448" id="BaseLexakaiDiagram" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="229.1667" x="494.2708" y="840.1611"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="229.1667" x="494.2708" y="840.1611"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="229.1667" x="494.2708" y="863.2161"/><rect codeLine="13" fill="none" height="87.5448" id="BaseLexakaiDiagram" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="229.1667" x="494.2708" y="840.1611"/><ellipse cx="534.6354" cy="855.8553" fill="#C8AC00" rx="10.4167" ry="10.4167" style="stroke:#D8BC00;stroke-width:1.0416666666666667;"/><path d="M534.7493,852.5574 L533.901,856.2866 L535.6038,856.2866 Z M533.6507,850.9094 L535.8541,850.9094 L538.3138,860.022 L536.5133,860.022 L535.9517,857.7698 L533.5409,857.7698 L532.9915,860.022 L531.191,860.022 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="134.375" x="557.0313" y="860.5794">BaseLexakaiDiagram</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="495.3125" x2="722.3958" y1="871.5495" y2="871.5495"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="495.3125" x2="722.3958" y1="879.8828" y2="879.8828"/><ellipse cx="505.7292" cy="891.3411" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="122.9167" x="517.1875" y="898.2524">String uml(String title)</text><polygon fill="#FFFF44" points="505.7292,905.8777,509.8958,910.0444,505.7292,914.211,501.5625,910.0444" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="196.875" x="517.1875" y="917.9972">void onUml(IndentingStringBuilder)</text><!--MD5=[7c5c88a606935469d5f89b0b5794816c]
class Named--><rect codeLine="9" fill="#282828" height="48.055" id="Named" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="82.2917" x="1329.1667" y="859.9528"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="82.2917" x="1329.1667" y="859.9528"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="82.2917" x="1329.1667" y="883.0078"/><rect codeLine="9" fill="none" height="48.055" id="Named" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="82.2917" x="1329.1667" y="859.9528"/><ellipse cx="1343.75" cy="875.647" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M1340.6331,872.8088 L1340.6331,871.2219 L1346.0592,871.2219 L1346.0592,872.8088 L1344.2464,872.8088 L1344.2464,878.7476 L1346.0592,878.7476 L1346.0592,880.3345 L1340.6331,880.3345 L1340.6331,878.7476 L1342.4459,878.7476 L1342.4459,872.8088 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="44.7917" x="1360.4167" y="880.3711">Named</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1330.2083" x2="1410.4167" y1="891.3411" y2="891.3411"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1330.2083" x2="1410.4167" y1="899.6745" y2="899.6745"/><!--MD5=[7a4729d26b999f6a4650b01106c103c5]
class Comparable--><rect codeLine="10" fill="#282828" height="48.055" id="Comparable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="115.625" x="927.0833" y="172.4528"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="115.625" x="927.0833" y="172.4528"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="115.625" x="927.0833" y="195.5078"/><rect codeLine="10" fill="none" height="48.055" id="Comparable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="115.625" x="927.0833" y="172.4528"/><ellipse cx="941.6667" cy="188.147" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M938.5498,185.3088 L938.5498,183.7219 L943.9758,183.7219 L943.9758,185.3088 L942.1631,185.3088 L942.1631,191.2476 L943.9758,191.2476 L943.9758,192.8345 L938.5498,192.8345 L938.5498,191.2476 L940.3625,191.2476 L940.3625,185.3088 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="78.125" x="958.3333" y="192.8711">Comparable</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="928.125" x2="1041.6667" y1="203.8411" y2="203.8411"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="928.125" x2="1041.6667" y1="212.1745" y2="212.1745"/><!--MD5=[0b4e4b4980470ea387cc45de9bd14b5b]
class Application--><rect fill="#282828" height="48.055" id="Application" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="111.4583" x="1498.9583" y="172.4528"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="111.4583" x="1498.9583" y="172.4528"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="111.4583" x="1498.9583" y="195.5078"/><rect fill="none" height="48.055" id="Application" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="111.4583" x="1498.9583" y="172.4528"/><ellipse cx="1513.5417" cy="188.147" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1515.4521,192.572 Q1515.0248,192.7917 1514.5549,192.9016 Q1514.0849,193.0115 1513.5661,193.0115 Q1511.7228,193.0115 1510.7524,191.7969 Q1509.7819,190.5823 1509.7819,188.2874 Q1509.7819,185.9863 1510.7524,184.7717 Q1511.7228,183.5571 1513.5661,183.5571 Q1514.0849,183.5571 1514.561,183.667 Q1515.037,183.7769 1515.4521,183.9966 L1515.4521,185.9985 Q1514.9882,185.5713 1514.5518,185.3729 Q1514.1154,185.1746 1513.6515,185.1746 Q1512.6628,185.1746 1512.1592,185.9589 Q1511.6557,186.7432 1511.6557,188.2874 Q1511.6557,189.8254 1512.1592,190.6097 Q1512.6628,191.394 1513.6515,191.394 Q1514.1154,191.394 1514.5518,191.1957 Q1514.9882,190.9973 1515.4521,190.5701 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="73.9583" x="1530.2083" y="192.8711">Application</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1500" x2="1609.375" y1="203.8411" y2="203.8411"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1500" x2="1609.375" y1="212.1745" y2="212.1745"/><!--MD5=[71ba3f8efe45f4767ee229c95530b131]
class Lexakai--><rect codeLine="21" fill="#282828" height="194.6025" id="Lexakai" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="212.5" x="1448.4375" y="786.5153"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="212.5" x="1448.4375" y="786.5153"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="212.5" x="1448.4375" y="809.5703"/><rect codeLine="21" fill="none" height="194.6025" id="Lexakai" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="212.5" x="1448.4375" y="786.5153"/><ellipse cx="1522.9167" cy="802.2095" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1524.8271,806.6345 Q1524.3998,806.8542 1523.9299,806.9641 Q1523.4599,807.074 1522.9411,807.074 Q1521.0978,807.074 1520.1274,805.8594 Q1519.1569,804.6448 1519.1569,802.3499 Q1519.1569,800.0488 1520.1274,798.8342 Q1521.0978,797.6196 1522.9411,797.6196 Q1523.4599,797.6196 1523.936,797.7295 Q1524.412,797.8394 1524.8271,798.0591 L1524.8271,800.061 Q1524.3632,799.6338 1523.9268,799.4354 Q1523.4904,799.2371 1523.0265,799.2371 Q1522.0378,799.2371 1521.5342,800.0214 Q1521.0307,800.8057 1521.0307,802.3499 Q1521.0307,803.8879 1521.5342,804.6722 Q1522.0378,805.4565 1523.0265,805.4565 Q1523.4904,805.4565 1523.9268,805.2582 Q1524.3632,805.0598 1524.8271,804.6326 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="48.9583" x="1545.8333" y="806.9336">Lexakai</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1449.4792" x2="1659.8958" y1="817.9036" y2="817.9036"/><polygon fill="#FFFF44" points="1459.8958,848.0652,1464.0625,852.2319,1459.8958,856.3985,1455.7292,852.2319" style="stroke:#B38D22;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="1471.3542" y="860.1847">Lexakai()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1449.4792" x2="1510.9375" y1="836.1094" y2="836.1094"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1514.0625" y="839.919">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1598.4375" x2="1659.8958" y1="836.1094" y2="836.1094"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1449.4792" x2="1659.8958" y1="869.8934" y2="869.8934"/><ellipse cx="1459.8958" cy="881.3517" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="70.8333" x="1471.3542" y="888.2629">Lexakai get()</text><ellipse cx="1459.8958" cy="901.0966" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="167.7083" x="1471.3542" y="908.0078">void main(String[] arguments)</text><ellipse cx="1459.8958" cy="920.8415" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="166.6667" x="1471.3542" y="927.7527">LexakaiProject project(Folder)</text><ellipse cx="1459.8958" cy="964.4979" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="180.2083" x="1471.3542" y="971.4091">CopyMode resourceCopyMode()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1449.4792" x2="1519.2708" y1="947.3338" y2="947.3338"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="1522.3958" y="951.1434">(filesystem)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1590.1042" x2="1659.8958" y1="947.3338" y2="947.3338"/><!--MD5=[cd91c464fa9582b032e673759c376552]
class LexakaiClassDiagram--><rect codeLine="35" fill="#282828" height="586.4217" id="LexakaiClassDiagram" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="466.6667" x="755.7292" y="1428.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="466.6667" x="755.7292" y="1428.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="466.6667" x="755.7292" y="1451.7578"/><rect codeLine="35" fill="none" height="586.4217" id="LexakaiClassDiagram" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="466.6667" x="755.7292" y="1428.7028"/><ellipse cx="911.9792" cy="1444.397" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M913.8896,1448.822 Q913.4623,1449.0417 912.9924,1449.1516 Q912.5224,1449.2615 912.0036,1449.2615 Q910.1603,1449.2615 909.1899,1448.0469 Q908.2194,1446.8323 908.2194,1444.5374 Q908.2194,1442.2363 909.1899,1441.0217 Q910.1603,1439.8071 912.0036,1439.8071 Q912.5224,1439.8071 912.9985,1439.917 Q913.4745,1440.0269 913.8896,1440.2466 L913.8896,1442.2485 Q913.4257,1441.8213 912.9893,1441.6229 Q912.5529,1441.4246 912.089,1441.4246 Q911.1003,1441.4246 910.5967,1442.2089 Q910.0932,1442.9932 910.0932,1444.5374 Q910.0932,1446.0754 910.5967,1446.8597 Q911.1003,1447.644 912.089,1447.644 Q912.5529,1447.644 912.9893,1447.4457 Q913.4257,1447.2473 913.8896,1446.8201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="139.5833" x="934.8958" y="1449.1211">LexakaiClassDiagram</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="756.7708" x2="1221.3542" y1="1460.0911" y2="1460.0911"/><ellipse cx="767.1875" cy="1495.461" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="246.875" x="778.6458" y="1502.3722">LexakaiClassDiagram(LexakaiProject, String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="756.7708" x2="945.3125" y1="1478.2969" y2="1478.2969"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="948.4375" y="1482.1065">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1032.8125" x2="1221.3542" y1="1478.2969" y2="1478.2969"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="756.7708" x2="1221.3542" y1="1512.0809" y2="1512.0809"/><ellipse cx="767.1875" cy="1523.5392" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="194.7917" x="778.6458" y="1530.4504">boolean automaticMethodGroups()</text><ellipse cx="767.1875" cy="1543.2841" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="160.4167" x="778.6458" y="1550.1953">boolean has(UmlInheritance)</text><ellipse cx="767.1875" cy="1563.029" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="131.25" x="778.6458" y="1569.9402">LexakaiProject project()</text><ellipse cx="767.1875" cy="1582.7738" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="192.7083" x="778.6458" y="1589.6851">Set&lt;String&gt; qualifiedTypeNames()</text><ellipse cx="767.1875" cy="1602.5187" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="178.125" x="778.6458" y="1609.4299">Referent referent(Type referent)</text><ellipse cx="767.1875" cy="1622.2636" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="65.625" x="778.6458" y="1629.1748">String title()</text><ellipse cx="767.1875" cy="1665.92" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="157.2917" x="778.6458" y="1672.8312">boolean isPackageDiagram()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="756.7708" x2="962.5" y1="1648.7559" y2="1648.7559"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="965.625" y="1652.5655">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1015.625" x2="1221.3542" y1="1648.7559" y2="1648.7559"/><ellipse cx="767.1875" cy="1709.5764" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="229.1667" x="778.6458" y="1716.4876">HashSet&lt;String&gt; abstractSuperClasses()</text><ellipse cx="767.1875" cy="1729.3213" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="161.4583" x="778.6458" y="1736.2325">boolean add(UmlInheritance)</text><ellipse cx="767.1875" cy="1749.0662" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="365.625" x="778.6458" y="1755.9774">List&lt;MethodDeclaration&gt; includedMethods(TypeDeclaration&lt;?&gt;)</text><ellipse cx="767.1875" cy="1768.811" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="230.2083" x="778.6458" y="1775.7222">List&lt;UmlType&gt; includedQualifiedTypes()</text><ellipse cx="767.1875" cy="1788.5559" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="778.6458" y="1795.4671">boolean isEmpty()</text><ellipse cx="767.1875" cy="1808.3008" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="198.9583" x="778.6458" y="1815.212">HashSet&lt;Object&gt; superInterfaces()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="756.7708" x2="954.6875" y1="1692.4123" y2="1692.4123"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="957.8125" y="1696.2219">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1023.4375" x2="1221.3542" y1="1692.4123" y2="1692.4123"/><ellipse cx="767.1875" cy="1851.9572" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="125" x="778.6458" y="1858.8684">void include(UmlType)</text><ellipse cx="767.1875" cy="1871.7021" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="262.5" x="778.6458" y="1878.6133">boolean includeMembers(TypeDeclaration&lt;?&gt;)</text><ellipse cx="767.1875" cy="1891.4469" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="266.6667" x="778.6458" y="1898.3582">boolean includeOverrides(TypeDeclaration&lt;?&gt;)</text><ellipse cx="767.1875" cy="1911.1918" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="434.375" x="778.6458" y="1918.103">void includedMethods(TypeDeclaration&lt;?&gt;, Consumer&lt;MethodDeclaration&gt;)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="756.7708" x2="959.8958" y1="1834.7931" y2="1834.7931"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="963.0208" y="1838.6027">(filtering)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1018.2292" x2="1221.3542" y1="1834.7931" y2="1834.7931"/><ellipse cx="767.1875" cy="1954.8482" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="94.7917" x="778.6458" y="1961.7594">String identifier()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="756.7708" x2="960.9375" y1="1937.6841" y2="1937.6841"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="964.0625" y="1941.4937">(identity)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1017.1875" x2="1221.3542" y1="1937.6841" y2="1937.6841"/><ellipse cx="767.1875" cy="1998.5046" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="303.125" x="778.6458" y="2005.4159">boolean includesQualifiedTypeName(String typeName)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="756.7708" x2="960.9375" y1="1981.3405" y2="1981.3405"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="964.0625" y="1985.1501">(naming)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1017.1875" x2="1221.3542" y1="1981.3405" y2="1981.3405"/><!--MD5=[0a3ce8fd96b244d9fb97109c62f8cd04]
class LexakaiProject--><rect codeLine="69" fill="#282828" height="962.6628" id="LexakaiProject" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="448.9583" x="760.4167" y="402.6611"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="448.9583" x="760.4167" y="402.6611"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="448.9583" x="760.4167" y="425.7161"/><rect codeLine="69" fill="none" height="962.6628" id="LexakaiProject" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="448.9583" x="760.4167" y="402.6611"/><ellipse cx="931.25" cy="418.3553" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M933.1604,422.7804 Q932.7332,423.0001 932.2632,423.1099 Q931.7932,423.2198 931.2744,423.2198 Q929.4312,423.2198 928.4607,422.0052 Q927.4902,420.7906 927.4902,418.4957 Q927.4902,416.1947 928.4607,414.9801 Q929.4312,413.7655 931.2744,413.7655 Q931.7932,413.7655 932.2693,413.8753 Q932.7454,413.9852 933.1604,414.2049 L933.1604,416.2069 Q932.6965,415.7796 932.2601,415.5813 Q931.8237,415.3829 931.3599,415.3829 Q930.3711,415.3829 929.8676,416.1672 Q929.364,416.9515 929.364,418.4957 Q929.364,420.0338 929.8676,420.8181 Q930.3711,421.6024 931.3599,421.6024 Q931.8237,421.6024 932.2601,421.404 Q932.6965,421.2056 933.1604,420.7784 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="92.7083" x="954.1667" y="423.0794">LexakaiProject</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="761.4583" x2="1208.3333" y1="434.0495" y2="434.0495"/><ellipse cx="771.875" cy="469.4194" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="367.7083" x="783.3333" y="476.3306">LexakaiProject(Lexakai, Version, Folder, Folder, Folder, JavaParser)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="761.4583" x2="941.1458" y1="452.2552" y2="452.2552"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="944.2708" y="456.0649">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1028.6458" x2="1208.3333" y1="452.2552" y2="452.2552"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="761.4583" x2="1208.3333" y1="486.0392" y2="486.0392"/><ellipse cx="771.875" cy="497.4976" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="194.7917" x="783.3333" y="504.4088">boolean automaticMethodGroups()</text><ellipse cx="771.875" cy="517.2424" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="416.6667" x="783.3333" y="524.1536">LexakaiProject automaticMethodGroups(boolean automaticMethodGroups)</text><ellipse cx="771.875" cy="536.9873" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="229.1667" x="783.3333" y="543.8985">void diagramNames(Consumer&lt;String&gt;)</text><ellipse cx="771.875" cy="556.7322" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="283.3333" x="783.3333" y="563.6434">void diagrams(Consumer&lt;LexakaiClassDiagram&gt;)</text><ellipse cx="771.875" cy="576.4771" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="173.9583" x="783.3333" y="583.3883">Pattern javadocSectionPattern()</text><ellipse cx="771.875" cy="596.2219" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="254.1667" x="783.3333" y="603.1331">LexakaiProject javadocSectionPattern(Pattern)</text><ellipse cx="771.875" cy="615.9668" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="783.3333" y="622.878">String link(Folder)</text><ellipse cx="771.875" cy="635.7117" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="207.2917" x="783.3333" y="642.6229">LexakaiProjectProperties properties()</text><ellipse cx="771.875" cy="655.4565" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="148.9583" x="783.3333" y="662.3678">String property(String key)</text><ellipse cx="771.875" cy="675.2014" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="320.8333" x="783.3333" y="682.1126">void typeDeclarations(Consumer&lt;TypeDeclaration&lt;?&gt;&gt;)</text><ellipse cx="771.875" cy="718.8578" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="364.5833" x="783.3333" y="725.769">LexakaiProject buildPackageDiagrams(boolean packageDiagrams)</text><ellipse cx="771.875" cy="738.6027" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="182.2917" x="783.3333" y="745.5139">boolean buildPackageDiagrams()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="761.4583" x2="954.6875" y1="701.6937" y2="701.6937"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="54.1667" x="957.8125" y="705.5033">(building)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1015.1042" x2="1208.3333" y1="701.6937" y2="701.6937"/><ellipse cx="771.875" cy="782.2591" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="150" x="783.3333" y="789.1703">boolean hasChildProjects()</text><ellipse cx="771.875" cy="802.004" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="143.75" x="783.3333" y="808.9152">boolean hasSourceCode()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="761.4583" x2="958.3333" y1="765.095" y2="765.095"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="46.875" x="961.4583" y="768.9046">(checks)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1011.4583" x2="1208.3333" y1="765.095" y2="765.095"/><ellipse cx="771.875" cy="845.6604" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="151.0417" x="783.3333" y="852.5716">boolean addHtmlAnchors()</text><ellipse cx="771.875" cy="865.4053" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="329.1667" x="783.3333" y="872.3165">LexakaiProject addHtmlAnchors(boolean addHtmlAnchors)</text><ellipse cx="771.875" cy="885.1501" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="238.5417" x="783.3333" y="892.0614">ObjectList&lt;LexakaiProject&gt; childProjects()</text><ellipse cx="771.875" cy="904.895" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="354.1667" x="783.3333" y="911.8062">ObjectList&lt;JavadocCoverage&gt; nestedProjectJavadocCoverage()</text><ellipse cx="771.875" cy="924.6399" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="258.3333" x="783.3333" y="931.5511">List&lt;TypeDeclaration&lt;?&gt;&gt; typeDeclarations()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="761.4583" x2="950.5208" y1="828.4963" y2="828.4963"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="953.6458" y="832.3059">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1019.2708" x2="1208.3333" y1="828.4963" y2="828.4963"/><ellipse cx="771.875" cy="968.2963" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="139.5833" x="783.3333" y="975.2075">LexakaiProjectFiles files()</text><ellipse cx="771.875" cy="988.0412" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="172.9167" x="783.3333" y="994.9524">LexakaiProjectFolders folders()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="761.4583" x2="949.4792" y1="951.1322" y2="951.1322"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="952.6042" y="954.9418">(filesystem)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1020.3125" x2="1208.3333" y1="951.1322" y2="951.1322"/><ellipse cx="771.875" cy="1031.6976" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="305.2083" x="783.3333" y="1038.6088">LexakaiProject includeObjectMethods(boolean include)</text><ellipse cx="771.875" cy="1051.4425" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="181.25" x="783.3333" y="1058.3537">boolean includeObjectMethods()</text><ellipse cx="771.875" cy="1071.1873" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="321.875" x="783.3333" y="1078.0986">LexakaiProject includeProtectedMethods(boolean include)</text><ellipse cx="771.875" cy="1090.9322" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="197.9167" x="783.3333" y="1097.8434">boolean includeProtectedMethods()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="761.4583" x2="955.7292" y1="1014.5335" y2="1014.5335"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="52.0833" x="958.8542" y="1018.3431">(filtering)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1014.0625" x2="1208.3333" y1="1014.5335" y2="1014.5335"/><ellipse cx="771.875" cy="1134.5886" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="95.8333" x="783.3333" y="1141.4998">Version version()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="761.4583" x2="956.7708" y1="1117.4245" y2="1117.4245"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="959.8958" y="1121.2341">(identity)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1013.0208" x2="1208.3333" y1="1117.4245" y2="1117.4245"/><ellipse cx="771.875" cy="1178.245" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="783.3333" y="1185.1563">void initialize()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="761.4583" x2="955.2083" y1="1161.0809" y2="1161.0809"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="53.125" x="958.3333" y="1164.8905">(lifecycle)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1014.5833" x2="1208.3333" y1="1161.0809" y2="1161.0809"/><ellipse cx="771.875" cy="1221.9014" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="231.25" x="783.3333" y="1228.8127">Percent averageProjectJavadocCoverage()</text><ellipse cx="771.875" cy="1241.6463" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="236.4583" x="783.3333" y="1248.5575">String meterMarkdownForPercent(Percent)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="761.4583" x2="963.5417" y1="1204.7373" y2="1204.7373"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="966.6667" y="1208.547">(math)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1006.25" x2="1208.3333" y1="1204.7373" y2="1204.7373"/><ellipse cx="771.875" cy="1285.3027" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="75" x="783.3333" y="1292.2139">String name()</text><ellipse cx="771.875" cy="1305.0476" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="138.5417" x="783.3333" y="1311.9588">String rootProjectName()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="761.4583" x2="956.7708" y1="1268.1386" y2="1268.1386"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="959.8958" y="1271.9482">(naming)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1013.0208" x2="1208.3333" y1="1268.1386" y2="1268.1386"/><ellipse cx="771.875" cy="1348.704" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="116.6667" x="783.3333" y="1355.6152">void updateReadMe()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="761.4583" x2="965.1042" y1="1331.5399" y2="1331.5399"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="33.3333" x="968.2292" y="1335.3495">(read)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1004.6875" x2="1208.3333" y1="1331.5399" y2="1331.5399"/><!--MD5=[d6b55f982ca60ed004895efb66d60ed4]
class LexakaiProjectFiles--><rect codeLine="118" fill="#282828" height="206.014" id="LexakaiProjectFiles" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="226.0417" x="11.4583" y="93.2861"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="226.0417" x="11.4583" y="93.2861"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="226.0417" x="11.4583" y="116.3411"/><rect codeLine="118" fill="none" height="206.014" id="LexakaiProjectFiles" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="226.0417" x="11.4583" y="93.2861"/><ellipse cx="55.7292" cy="108.9803" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M57.6396,113.4054 Q57.2123,113.6251 56.7424,113.7349 Q56.2724,113.8448 55.7536,113.8448 Q53.9103,113.8448 52.9399,112.6302 Q51.9694,111.4156 51.9694,109.1207 Q51.9694,106.8197 52.9399,105.6051 Q53.9103,104.3905 55.7536,104.3905 Q56.2724,104.3905 56.7485,104.5003 Q57.2245,104.6102 57.6396,104.8299 L57.6396,106.8319 Q57.1757,106.4046 56.7393,106.2063 Q56.3029,106.0079 55.839,106.0079 Q54.8503,106.0079 54.3467,106.7922 Q53.8432,107.5765 53.8432,109.1207 Q53.8432,110.6588 54.3467,111.4431 Q54.8503,112.2274 55.839,112.2274 Q56.3029,112.2274 56.7393,112.029 Q57.1757,111.8306 57.6396,111.4034 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="122.9167" x="78.6458" y="113.7044">LexakaiProjectFiles</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="12.5" x2="236.4583" y1="124.6745" y2="124.6745"/><ellipse cx="22.9167" cy="160.0444" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="193.75" x="34.375" y="166.9556">LexakaiProjectFiles(LexakaiProject)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="12.5" x2="80.7292" y1="142.8802" y2="142.8802"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="83.8542" y="146.6899">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="168.2292" x2="236.4583" y1="142.8802" y2="142.8802"/><ellipse cx="22.9167" cy="203.7008" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="166.6667" x="34.375" y="210.612">File outputLexakaiProperties()</text><ellipse cx="22.9167" cy="223.4456" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="154.1667" x="34.375" y="230.3569">File outputLexakaiSettings()</text><ellipse cx="22.9167" cy="243.1905" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="121.875" x="34.375" y="250.1017">File readMeTemplate()</text><ellipse cx="22.9167" cy="262.9354" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="71.875" x="34.375" y="269.8466">File readme()</text><ellipse cx="22.9167" cy="282.6803" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="164.5833" x="34.375" y="289.5915">File sourceProjectProperties()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="12.5" x2="89.0625" y1="186.5367" y2="186.5367"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="92.1875" y="190.3463">(filesystem)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="159.8958" x2="236.4583" y1="186.5367" y2="186.5367"/><!--MD5=[24ed06dcb965a566c6f2d113db217ea3]
class LexakaiProjectFolders--><rect codeLine="130" fill="#282828" height="284.9935" id="LexakaiProjectFolders" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="367.7083" x="273.9583" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="367.7083" x="273.9583" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="367.7083" x="273.9583" y="76.7578"/><rect codeLine="130" fill="none" height="284.9935" id="LexakaiProjectFolders" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="367.7083" x="273.9583" y="53.7028"/><ellipse cx="380.2083" cy="69.397" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M382.1187,73.822 Q381.6915,74.0417 381.2215,74.1516 Q380.7515,74.2615 380.2327,74.2615 Q378.3895,74.2615 377.419,73.0469 Q376.4486,71.8323 376.4486,69.5374 Q376.4486,67.2363 377.419,66.0217 Q378.3895,64.8071 380.2327,64.8071 Q380.7515,64.8071 381.2276,64.917 Q381.7037,65.0269 382.1187,65.2466 L382.1187,67.2485 Q381.6549,66.8213 381.2185,66.6229 Q380.7821,66.4246 380.3182,66.4246 Q379.3294,66.4246 378.8259,67.2089 Q378.3223,67.9932 378.3223,69.5374 Q378.3223,71.0754 378.8259,71.8597 Q379.3294,72.644 380.3182,72.644 Q380.7821,72.644 381.2185,72.4457 Q381.6549,72.2473 382.1187,71.8201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="140.625" x="403.125" y="74.1211">LexakaiProjectFolders</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="275" x2="640.625" y1="85.0911" y2="85.0911"/><ellipse cx="285.4167" cy="120.461" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="335.4167" x="296.875" y="127.3722">LexakaiProjectFolders(LexakaiProject, Folder, Folder, Folder)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="275" x2="414.0625" y1="103.2969" y2="103.2969"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="417.1875" y="107.1065">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="501.5625" x2="640.625" y1="103.2969" y2="103.2969"/><ellipse cx="285.4167" cy="164.1174" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="84.375" x="296.875" y="171.0286">Folder output()</text><ellipse cx="285.4167" cy="183.8623" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="137.5" x="296.875" y="190.7735">Folder outputDiagrams()</text><ellipse cx="285.4167" cy="203.6072" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="169.7917" x="296.875" y="210.5184">Folder outputDocumentation()</text><ellipse cx="285.4167" cy="223.3521" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="126.0417" x="296.875" y="230.2633">Folder outputLexakai()</text><ellipse cx="285.4167" cy="243.0969" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="110.4167" x="296.875" y="250.0081">Folder outputRoot()</text><ellipse cx="285.4167" cy="262.8418" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="114.5833" x="296.875" y="269.753">Folder sourceCode()</text><ellipse cx="285.4167" cy="282.5867" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="123.9583" x="296.875" y="289.4979">Folder sourceProject()</text><ellipse cx="285.4167" cy="302.3315" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="207.2917" x="296.875" y="309.2428">Folder sourceProjectRelativeToRoot()</text><ellipse cx="285.4167" cy="322.0764" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="111.4583" x="296.875" y="328.9876">Folder sourceRoot()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="275" x2="422.3958" y1="146.9533" y2="146.9533"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="64.5833" x="425.5208" y="150.7629">(filesystem)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="493.2292" x2="640.625" y1="146.9533" y2="146.9533"/><!--MD5=[e9c68631d2db108d1e4f6719668fa91b]
class PropertyMap--><rect fill="#282828" height="48.055" id="PropertyMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="118.75" x="1767.1875" y="172.4528"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="118.75" x="1767.1875" y="172.4528"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="118.75" x="1767.1875" y="195.5078"/><rect fill="none" height="48.055" id="PropertyMap" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="118.75" x="1767.1875" y="172.4528"/><ellipse cx="1781.7708" cy="188.147" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1783.6812,192.572 Q1783.254,192.7917 1782.784,192.9016 Q1782.314,193.0115 1781.7952,193.0115 Q1779.952,193.0115 1778.9815,191.7969 Q1778.0111,190.5823 1778.0111,188.2874 Q1778.0111,185.9863 1778.9815,184.7717 Q1779.952,183.5571 1781.7952,183.5571 Q1782.314,183.5571 1782.7901,183.667 Q1783.2662,183.7769 1783.6812,183.9966 L1783.6812,185.9985 Q1783.2174,185.5713 1782.781,185.3729 Q1782.3446,185.1746 1781.8807,185.1746 Q1780.8919,185.1746 1780.3884,185.9589 Q1779.8848,186.7432 1779.8848,188.2874 Q1779.8848,189.8254 1780.3884,190.6097 Q1780.8919,191.394 1781.8807,191.394 Q1782.3446,191.394 1782.781,191.1957 Q1783.2174,190.9973 1783.6812,190.5701 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="81.25" x="1798.4375" y="192.8711">PropertyMap</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1768.2292" x2="1884.8958" y1="203.8411" y2="203.8411"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1768.2292" x2="1884.8958" y1="212.1745" y2="212.1745"/><!--MD5=[58e2258718aefc6d74a9ae5dbe47ca35]
class LexakaiProjectProperties--><rect codeLine="147" fill="#282828" height="321.405" id="LexakaiProjectProperties" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="258.3333" x="1697.3958" y="722.9736"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="258.3333" x="1697.3958" y="722.9736"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="258.3333" x="1697.3958" y="746.0286"/><rect codeLine="147" fill="none" height="321.405" id="LexakaiProjectProperties" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="258.3333" x="1697.3958" y="722.9736"/><ellipse cx="1740.1042" cy="738.6678" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M1742.0146,743.0929 Q1741.5873,743.3126 1741.1174,743.4224 Q1740.6474,743.5323 1740.1286,743.5323 Q1738.2853,743.5323 1737.3149,742.3177 Q1736.3444,741.1031 1736.3444,738.8082 Q1736.3444,736.5072 1737.3149,735.2926 Q1738.2853,734.078 1740.1286,734.078 Q1740.6474,734.078 1741.1235,734.1878 Q1741.5995,734.2977 1742.0146,734.5174 L1742.0146,736.5194 Q1741.5507,736.0921 1741.1143,735.8938 Q1740.6779,735.6954 1740.214,735.6954 Q1739.2253,735.6954 1738.7217,736.4797 Q1738.2182,737.264 1738.2182,738.8082 Q1738.2182,740.3463 1738.7217,741.1306 Q1739.2253,741.9149 1740.214,741.9149 Q1740.6779,741.9149 1741.1143,741.7165 Q1741.5507,741.5181 1742.0146,741.0909 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="158.3333" x="1763.0208" y="743.3919">LexakaiProjectProperties</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="1698.4375" x2="1954.6875" y1="754.362" y2="754.362"/><ellipse cx="1708.8542" cy="789.7319" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="226.0417" x="1720.3125" y="796.6431">LexakaiProjectProperties(LexakaiProject)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1698.4375" x2="1782.8125" y1="772.5677" y2="772.5677"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="1785.9375" y="776.3774">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1870.3125" x2="1954.6875" y1="772.5677" y2="772.5677"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1698.4375" x2="1954.6875" y1="806.3517" y2="806.3517"/><ellipse cx="1708.8542" cy="817.8101" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="132.2917" x="1720.3125" y="824.7213">String imagesLocation()</text><ellipse cx="1708.8542" cy="861.4665" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="136.4583" x="1720.3125" y="868.3777">String projectArtifactId()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1698.4375" x2="1798.4375" y1="844.3024" y2="844.3024"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="1801.5625" y="848.112">(identity)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1854.6875" x2="1954.6875" y1="844.3024" y2="844.3024"/><ellipse cx="1708.8542" cy="905.1229" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="156.25" x="1720.3125" y="912.0341">String projectModuleName()</text><ellipse cx="1708.8542" cy="924.8678" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="115.625" x="1720.3125" y="931.779">String projectName()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1698.4375" x2="1798.4375" y1="887.9588" y2="887.9588"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="1801.5625" y="891.7684">(naming)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1854.6875" x2="1954.6875" y1="887.9588" y2="887.9588"/><ellipse cx="1708.8542" cy="968.5242" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="183.3333" x="1720.3125" y="975.4354">String outputDiagramsLocation()</text><ellipse cx="1708.8542" cy="988.269" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="215.625" x="1720.3125" y="995.1803">String outputDocumentationLocation()</text><ellipse cx="1708.8542" cy="1008.0139" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="172.9167" x="1720.3125" y="1014.9251">String outputJavadocLocation()</text><ellipse cx="1708.8542" cy="1027.7588" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="221.875" x="1720.3125" y="1034.67">String outputJavadocLocation(UmlType)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1698.4375" x2="1805.7292" y1="951.3601" y2="951.3601"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="35.4167" x="1808.8542" y="955.1697">(write)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="1847.3958" x2="1954.6875" y1="951.3601" y2="951.3601"/><!--MD5=[e90ef443e2de7449fab3197113b43b47]
class LexakaiClassDiagram.Referent--><rect codeLine="165" fill="#282828" height="131.2012" id="LexakaiClassDiagram.Referent" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="234.375" x="7.2917" y="818.2861"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="234.375" x="7.2917" y="818.2861"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="234.375" x="7.2917" y="841.3411"/><rect codeLine="165" fill="none" height="131.2012" id="LexakaiClassDiagram.Referent" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="234.375" x="7.2917" y="818.2861"/><ellipse cx="21.875" cy="833.9803" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M23.7854,838.4054 Q23.3582,838.6251 22.8882,838.7349 Q22.4182,838.8448 21.8994,838.8448 Q20.0562,838.8448 19.0857,837.6302 Q18.1152,836.4156 18.1152,834.1207 Q18.1152,831.8197 19.0857,830.6051 Q20.0562,829.3905 21.8994,829.3905 Q22.4182,829.3905 22.8943,829.5003 Q23.3704,829.6102 23.7854,829.8299 L23.7854,831.8319 Q23.3215,831.4046 22.8851,831.2063 Q22.4487,831.0079 21.9849,831.0079 Q20.9961,831.0079 20.4926,831.7922 Q19.989,832.5765 19.989,834.1207 Q19.989,835.6588 20.4926,836.4431 Q20.9961,837.2274 21.9849,837.2274 Q22.4487,837.2274 22.8851,837.029 Q23.3215,836.8306 23.7854,836.4034 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="196.875" x="38.5417" y="838.7044">LexakaiClassDiagram.Referent</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="8.3333" x2="240.625" y1="849.6745" y2="849.6745"/><ellipse cx="18.75" cy="885.0444" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="121.875" x="30.2083" y="891.9556">Referent(String, Type)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="80.7292" y1="867.8802" y2="867.8802"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="83.8542" y="871.6899">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="168.2292" x2="240.625" y1="867.8802" y2="867.8802"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="240.625" y1="901.6642" y2="901.6642"/><ellipse cx="18.75" cy="913.1226" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="103.125" x="30.2083" y="920.0338">String cardinality()</text><ellipse cx="18.75" cy="932.8674" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="83.3333" x="30.2083" y="939.7786">Type referent()</text><!--MD5=[d577b87d57838e1c1e0781a982567153]
reverse link BaseRepeater to BaseLexakaiDiagram--><path codeLine="12" d="M731.6979,241.3695 C707.9375,365.4424 640.5104,717.557 617.0313,840.1507 " fill="none" id="BaseRepeater-backto-BaseLexakaiDiagram" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="724.5833,239.7445,735.6667,220.6507,738.9063,242.484,724.5833,239.7445" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[1a1431ce37d8053f400fb8f8766fec82]
reverse link Application to Lexakai--><path codeLine="20" d="M1554.6875,241.7757 C1554.6875,351.1507 1554.6875,635.9632 1554.6875,786.4528 " fill="none" id="Application-backto-Lexakai" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1547.3958,241.484,1554.6875,220.6507,1561.9792,241.484,1547.3958,241.484" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[fa551b829565ba58f1de5fa1b0985ed4]
reverse link BaseLexakaiDiagram to LexakaiClassDiagram--><path codeLine="33" d="M619.4271,948.3903 C636.6771,1042.5986 675.7604,1223.609 742.1875,1365.1611 C752.0833,1386.2549 763.2083,1407.4632 775.1146,1428.432 " fill="none" id="BaseLexakaiDiagram-backto-LexakaiClassDiagram" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="612.2292,949.5257,615.75,927.734,626.5833,946.9632,612.2292,949.5257" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[71641bad2aa654f1bc64e2946986b1b1]
reverse link Named to LexakaiClassDiagram--><path codeLine="34" d="M1373.4583,929.1924 C1377.8854,1016.7861 1378.9063,1216.6715 1310.9375,1365.1611 C1288.5833,1414.0049 1257.0521,1460.8174 1222.4063,1503.5257 " fill="none" id="Named-backto-LexakaiClassDiagram" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1366.1771,929.5153,1372.2188,908.2861,1380.7292,928.6507,1366.1771,929.5153" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[ee932fd7f1e0a70ce902c840e2ec0ec6]
reverse link BaseRepeater to LexakaiProject--><path codeLine="66" d="M755.3958,240.2757 C768.6979,277.5257 789.5417,335.8799 813.3646,402.5882 " fill="none" id="BaseRepeater-backto-LexakaiProject" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="748.5313,242.7236,748.3854,220.6507,762.2604,237.8174,748.5313,242.7236" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[7833d3205852db5b5922448a307d98f4]
reverse link Comparable to LexakaiProject--><path codeLine="67" d="M984.8958,241.5986 C984.8958,278.8903 984.8958,336.6611 984.8958,402.5882 " fill="none" id="Comparable-backto-LexakaiProject" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="977.6042,241.484,984.8958,220.6507,992.1875,241.484,977.6042,241.484" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[b04245787456317ee4873214d554c407]
link LexakaiProject to LexakaiProject--><path codeLine="68" d="M1209.4479,805.557 C1231.6875,821.2549 1245.8333,847.3799 1245.8333,883.9111 C1245.8333,917.8799 1233.6042,942.8382 1214.0208,958.7965 " fill="none" id="LexakaiProject-to-LexakaiProject" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="#545454" points="1209.4479,962.2653,1219.4387,959.9336,1213.602,959.1236,1214.412,953.287,1209.4479,962.2653" style="stroke:#545454;stroke-width:1.5625;"/><text fill="#A0A0A0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="45.8333" x="1255.2083" y="888.7044">creates</text><!--MD5=[e18baa43b86e3bab14433b5af603ae2c]
reverse link PropertyMap to LexakaiProjectProperties--><path codeLine="146" d="M1826.5625,241.6403 C1826.5625,336.9736 1826.5625,566.0257 1826.5625,722.8903 " fill="none" id="PropertyMap-backto-LexakaiProjectProperties" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="1819.2708,241.484,1826.5625,220.6507,1833.8542,241.484,1819.2708,241.484" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[7a3952b3419f0bd80a1cdd6028544a4e]
link LexakaiProjectFiles to LexakaiProjectFolders--><!--MD5=[9450d736431e6428d1ed33f3558bdfa4]
link LexakaiProjectFiles to LexakaiClassDiagram.Referent--><!--MD5=[d31dd0a3cbefc0cbaab74b02e9ffb36f]
@startuml

    !include ../lexakai/lexakai.theme
    
    title "com.telenav.lexakai"
    
    abstract BaseRepeater
    abstract BaseLexakaiDiagram
    
    interface Named
    interface Comparable
    
    BaseRepeater <|- - BaseLexakaiDiagram
    abstract class BaseLexakaiDiagram
    {
        - -
        +String uml(String title)
        #void onUml(IndentingStringBuilder)
    }
    
    Application <|- - Lexakai
    class Lexakai
    {
        - -(constructors)- -
        #Lexakai()
        - -
        +Lexakai get()
        +void main(String[] arguments)
        +LexakaiProject project(Folder)
        - -(filesystem)- -
        +CopyMode resourceCopyMode()
    }
    
    BaseLexakaiDiagram <|- - LexakaiClassDiagram
    Named <|- - LexakaiClassDiagram
    class LexakaiClassDiagram
    {
        - -(constructors)- -
        +LexakaiClassDiagram(LexakaiProject, String)
        - -
        +boolean automaticMethodGroups()
        +boolean has(UmlInheritance)
        +LexakaiProject project()
        +Set<String> qualifiedTypeNames()
        +Referent referent(Type referent)
        +String title()
        - -(checks)- -
        +boolean isPackageDiagram()
        - -(collection)- -
        +HashSet<String> abstractSuperClasses()
        +boolean add(UmlInheritance)
        +List<MethodDeclaration> includedMethods(TypeDeclaration<?>)
        +List<UmlType> includedQualifiedTypes()
        +boolean isEmpty()
        +HashSet<Object> superInterfaces()
        - -(filtering)- -
        +void include(UmlType)
        +boolean includeMembers(TypeDeclaration<?>)
        +boolean includeOverrides(TypeDeclaration<?>)
        +void includedMethods(TypeDeclaration<?>, Consumer<MethodDeclaration>)
        - -(identity)- -
        +String identifier()
        - -(naming)- -
        +boolean includesQualifiedTypeName(String typeName)
    }
    
    BaseRepeater <|- - LexakaiProject
    Comparable <|- - LexakaiProject
    LexakaiProject - -> LexakaiProject : "creates"
    class LexakaiProject
    {
        - -(constructors)- -
        +LexakaiProject(Lexakai, Version, Folder, Folder, Folder, JavaParser)
        - -
        +boolean automaticMethodGroups()
        +LexakaiProject automaticMethodGroups(boolean automaticMethodGroups)
        +void diagramNames(Consumer<String>)
        +void diagrams(Consumer<LexakaiClassDiagram>)
        +Pattern javadocSectionPattern()
        +LexakaiProject javadocSectionPattern(Pattern)
        +String link(Folder)
        +LexakaiProjectProperties properties()
        +String property(String key)
        +void typeDeclarations(Consumer<TypeDeclaration<?>>)
        - -(building)- -
        +LexakaiProject buildPackageDiagrams(boolean packageDiagrams)
        +boolean buildPackageDiagrams()
        - -(checks)- -
        +boolean hasChildProjects()
        +boolean hasSourceCode()
        - -(collection)- -
        +boolean addHtmlAnchors()
        +LexakaiProject addHtmlAnchors(boolean addHtmlAnchors)
        +ObjectList<LexakaiProject> childProjects()
        +ObjectList<JavadocCoverage> nestedProjectJavadocCoverage()
        +List<TypeDeclaration<?>> typeDeclarations()
        - -(filesystem)- -
        +LexakaiProjectFiles files()
        +LexakaiProjectFolders folders()
        - -(filtering)- -
        +LexakaiProject includeObjectMethods(boolean include)
        +boolean includeObjectMethods()
        +LexakaiProject includeProtectedMethods(boolean include)
        +boolean includeProtectedMethods()
        - -(identity)- -
        +Version version()
        - -(lifecycle)- -
        +void initialize()
        - -(math)- -
        +Percent averageProjectJavadocCoverage()
        +String meterMarkdownForPercent(Percent)
        - -(naming)- -
        +String name()
        +String rootProjectName()
        - -(read)- -
        +void updateReadMe()
    }
    
    class LexakaiProjectFiles
    {
        - -(constructors)- -
        +LexakaiProjectFiles(LexakaiProject)
        - -(filesystem)- -
        +File outputLexakaiProperties()
        +File outputLexakaiSettings()
        +File readMeTemplate()
        +File readme()
        +File sourceProjectProperties()
    }
    
    class LexakaiProjectFolders
    {
        - -(constructors)- -
        +LexakaiProjectFolders(LexakaiProject, Folder, Folder, Folder)
        - -(filesystem)- -
        +Folder output()
        +Folder outputDiagrams()
        +Folder outputDocumentation()
        +Folder outputLexakai()
        +Folder outputRoot()
        +Folder sourceCode()
        +Folder sourceProject()
        +Folder sourceProjectRelativeToRoot()
        +Folder sourceRoot()
    }
    
    PropertyMap <|- - LexakaiProjectProperties
    class LexakaiProjectProperties
    {
        - -(constructors)- -
        +LexakaiProjectProperties(LexakaiProject)
        - -
        +String imagesLocation()
        - -(identity)- -
        +String projectArtifactId()
        - -(naming)- -
        +String projectModuleName()
        +String projectName()
        - -(write)- -
        +String outputDiagramsLocation()
        +String outputDocumentationLocation()
        +String outputJavadocLocation()
        +String outputJavadocLocation(UmlType)
    }
    
    class LexakaiClassDiagram.Referent
    {
        - -(constructors)- -
        +Referent(String, Type)
        - -
        +String cardinality()
        +Type referent()
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.lexakai"
    
    abstract BaseRepeater
    abstract BaseLexakaiDiagram
    
    interface Named
    interface Comparable
    
    BaseRepeater <|- - BaseLexakaiDiagram
    abstract class BaseLexakaiDiagram
    {
        - -
        +String uml(String title)
        #void onUml(IndentingStringBuilder)
    }
    
    Application <|- - Lexakai
    class Lexakai
    {
        - -(constructors)- -
        #Lexakai()
        - -
        +Lexakai get()
        +void main(String[] arguments)
        +LexakaiProject project(Folder)
        - -(filesystem)- -
        +CopyMode resourceCopyMode()
    }
    
    BaseLexakaiDiagram <|- - LexakaiClassDiagram
    Named <|- - LexakaiClassDiagram
    class LexakaiClassDiagram
    {
        - -(constructors)- -
        +LexakaiClassDiagram(LexakaiProject, String)
        - -
        +boolean automaticMethodGroups()
        +boolean has(UmlInheritance)
        +LexakaiProject project()
        +Set<String> qualifiedTypeNames()
        +Referent referent(Type referent)
        +String title()
        - -(checks)- -
        +boolean isPackageDiagram()
        - -(collection)- -
        +HashSet<String> abstractSuperClasses()
        +boolean add(UmlInheritance)
        +List<MethodDeclaration> includedMethods(TypeDeclaration<?>)
        +List<UmlType> includedQualifiedTypes()
        +boolean isEmpty()
        +HashSet<Object> superInterfaces()
        - -(filtering)- -
        +void include(UmlType)
        +boolean includeMembers(TypeDeclaration<?>)
        +boolean includeOverrides(TypeDeclaration<?>)
        +void includedMethods(TypeDeclaration<?>, Consumer<MethodDeclaration>)
        - -(identity)- -
        +String identifier()
        - -(naming)- -
        +boolean includesQualifiedTypeName(String typeName)
    }
    
    BaseRepeater <|- - LexakaiProject
    Comparable <|- - LexakaiProject
    LexakaiProject - -> LexakaiProject : "creates"
    class LexakaiProject
    {
        - -(constructors)- -
        +LexakaiProject(Lexakai, Version, Folder, Folder, Folder, JavaParser)
        - -
        +boolean automaticMethodGroups()
        +LexakaiProject automaticMethodGroups(boolean automaticMethodGroups)
        +void diagramNames(Consumer<String>)
        +void diagrams(Consumer<LexakaiClassDiagram>)
        +Pattern javadocSectionPattern()
        +LexakaiProject javadocSectionPattern(Pattern)
        +String link(Folder)
        +LexakaiProjectProperties properties()
        +String property(String key)
        +void typeDeclarations(Consumer<TypeDeclaration<?>>)
        - -(building)- -
        +LexakaiProject buildPackageDiagrams(boolean packageDiagrams)
        +boolean buildPackageDiagrams()
        - -(checks)- -
        +boolean hasChildProjects()
        +boolean hasSourceCode()
        - -(collection)- -
        +boolean addHtmlAnchors()
        +LexakaiProject addHtmlAnchors(boolean addHtmlAnchors)
        +ObjectList<LexakaiProject> childProjects()
        +ObjectList<JavadocCoverage> nestedProjectJavadocCoverage()
        +List<TypeDeclaration<?>> typeDeclarations()
        - -(filesystem)- -
        +LexakaiProjectFiles files()
        +LexakaiProjectFolders folders()
        - -(filtering)- -
        +LexakaiProject includeObjectMethods(boolean include)
        +boolean includeObjectMethods()
        +LexakaiProject includeProtectedMethods(boolean include)
        +boolean includeProtectedMethods()
        - -(identity)- -
        +Version version()
        - -(lifecycle)- -
        +void initialize()
        - -(math)- -
        +Percent averageProjectJavadocCoverage()
        +String meterMarkdownForPercent(Percent)
        - -(naming)- -
        +String name()
        +String rootProjectName()
        - -(read)- -
        +void updateReadMe()
    }
    
    class LexakaiProjectFiles
    {
        - -(constructors)- -
        +LexakaiProjectFiles(LexakaiProject)
        - -(filesystem)- -
        +File outputLexakaiProperties()
        +File outputLexakaiSettings()
        +File readMeTemplate()
        +File readme()
        +File sourceProjectProperties()
    }
    
    class LexakaiProjectFolders
    {
        - -(constructors)- -
        +LexakaiProjectFolders(LexakaiProject, Folder, Folder, Folder)
        - -(filesystem)- -
        +Folder output()
        +Folder outputDiagrams()
        +Folder outputDocumentation()
        +Folder outputLexakai()
        +Folder outputRoot()
        +Folder sourceCode()
        +Folder sourceProject()
        +Folder sourceProjectRelativeToRoot()
        +Folder sourceRoot()
    }
    
    PropertyMap <|- - LexakaiProjectProperties
    class LexakaiProjectProperties
    {
        - -(constructors)- -
        +LexakaiProjectProperties(LexakaiProject)
        - -
        +String imagesLocation()
        - -(identity)- -
        +String projectArtifactId()
        - -(naming)- -
        +String projectModuleName()
        +String projectName()
        - -(write)- -
        +String outputDiagramsLocation()
        +String outputDocumentationLocation()
        +String outputJavadocLocation()
        +String outputJavadocLocation(UmlType)
    }
    
    class LexakaiClassDiagram.Referent
    {
        - -(constructors)- -
        +Referent(String, Type)
        - -
        +String cardinality()
        +Type referent()
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>