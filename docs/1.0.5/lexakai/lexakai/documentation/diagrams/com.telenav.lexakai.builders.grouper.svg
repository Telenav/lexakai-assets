<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="595.8333px" preserveAspectRatio="none" style="width:907px;height:595px;background:#333333;" version="1.1" viewBox="0 0 907 595" width="907.2917px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="394.7917" x="249.2188" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="371.875" x="260.6771" y="30.5583">com.telenav.lexakai.builders.grouper</text><!--MD5=[7a4729d26b999f6a4650b01106c103c5]
class Comparable--><rect codeLine="6" fill="#282828" height="48.055" id="Comparable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="115.625" x="661.9792" y="107.3486"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="115.625" x="661.9792" y="107.3486"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="115.625" x="661.9792" y="130.4036"/><rect codeLine="6" fill="none" height="48.055" id="Comparable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="115.625" x="661.9792" y="107.3486"/><ellipse cx="676.5625" cy="123.0428" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M673.9665,120.2047 L673.9665,118.6178 L679.3925,118.6178 L679.3925,120.2047 L677.5798,120.2047 L677.5798,126.1434 L679.3925,126.1434 L679.3925,127.7303 L673.9665,127.7303 L673.9665,126.1434 L675.7792,126.1434 L675.7792,120.2047 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="78.125" x="693.2292" y="127.7669">Comparable</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="663.0208" x2="776.5625" y1="138.737" y2="138.737"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="663.0208" x2="776.5625" y1="147.0703" y2="147.0703"/><!--MD5=[47de47a8b5f06cbc5e036fae0a9149b7]
class Iterable--><rect codeLine="7" fill="#282828" height="48.055" id="Iterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="86.4583" x="814.0625" y="107.3486"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="86.4583" x="814.0625" y="107.3486"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="86.4583" x="814.0625" y="130.4036"/><rect codeLine="7" fill="none" height="48.055" id="Iterable" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="86.4583" x="814.0625" y="107.3486"/><ellipse cx="828.6458" cy="123.0428" fill="#008400" rx="10.4167" ry="10.4167" style="stroke:#239C23;stroke-width:1.0416666666666667;"/><path d="M826.0498,120.2047 L826.0498,118.6178 L831.4758,118.6178 L831.4758,120.2047 L829.6631,120.2047 L829.6631,126.1434 L831.4758,126.1434 L831.4758,127.7303 L826.0498,127.7303 L826.0498,126.1434 L827.8625,126.1434 L827.8625,120.2047 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-style="italic" font-weight="bold" lengthAdjust="spacing" textLength="48.9583" x="845.3125" y="127.7669">Iterable</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="815.1042" x2="899.4792" y1="138.737" y2="138.737"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="815.1042" x2="899.4792" y1="147.0703" y2="147.0703"/><!--MD5=[1ed0a6fd75153efc580d3d2e6ab2215a]
class MethodGroup--><rect codeLine="11" fill="#282828" height="317.2384" id="MethodGroup" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="182.2917" x="697.3958" y="271.4111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="182.2917" x="697.3958" y="271.4111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="182.2917" x="697.3958" y="294.4661"/><rect codeLine="11" fill="none" height="317.2384" id="MethodGroup" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="182.2917" x="697.3958" y="271.4111"/><ellipse cx="737.2917" cy="287.1053" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M739.2021,291.5304 Q738.7748,291.7501 738.3049,291.8599 Q737.8349,291.9698 737.3161,291.9698 Q735.4728,291.9698 734.5024,290.7552 Q733.5319,289.5406 733.5319,287.2457 Q733.5319,284.9447 734.5024,283.7301 Q735.4728,282.5155 737.3161,282.5155 Q737.8349,282.5155 738.311,282.6253 Q738.787,282.7352 739.2021,282.9549 L739.2021,284.9569 Q738.7382,284.5296 738.3018,284.3313 Q737.8654,284.1329 737.4015,284.1329 Q736.4128,284.1329 735.9092,284.9172 Q735.4057,285.7015 735.4057,287.2457 Q735.4057,288.7838 735.9092,289.5681 Q736.4128,290.3524 737.4015,290.3524 Q737.8654,290.3524 738.3018,290.154 Q738.7382,289.9556 739.2021,289.5284 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="88.5417" x="759.5833" y="291.8294">MethodGroup</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="698.4375" x2="878.6458" y1="302.7995" y2="302.7995"/><ellipse cx="708.8542" cy="338.1694" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="118.75" x="720.3125" y="345.0806">MethodGroup(String)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="698.4375" x2="744.7917" y1="321.0052" y2="321.0052"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="747.9167" y="324.8149">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="832.2917" x2="878.6458" y1="321.0052" y2="321.0052"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="698.4375" x2="878.6458" y1="354.7892" y2="354.7892"/><ellipse cx="708.8542" cy="366.2476" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="65.625" x="720.3125" y="373.1588">String uml()</text><ellipse cx="708.8542" cy="409.904" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="140.625" x="720.3125" y="416.8152">boolean add(UmlMethod)</text><ellipse cx="708.8542" cy="429.6488" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="78.125" x="720.3125" y="436.5601">Count count()</text><ellipse cx="708.8542" cy="449.3937" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="97.9167" x="720.3125" y="456.3049">UmlMethod first()</text><ellipse cx="708.8542" cy="469.1386" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="720.3125" y="476.0498">boolean isEmpty()</text><ellipse cx="708.8542" cy="488.8835" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="47.9167" x="720.3125" y="495.7947">int size()</text><ellipse cx="708.8542" cy="508.6283" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="150" x="720.3125" y="515.5396">List&lt;UmlMethod&gt; sorted()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="698.4375" x2="754.1667" y1="392.7399" y2="392.7399"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="757.2917" y="396.5495">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="822.9167" x2="878.6458" y1="392.7399" y2="392.7399"/><ellipse cx="708.8542" cy="552.2847" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="132.2917" x="720.3125" y="559.196">void name(String name)</text><ellipse cx="708.8542" cy="572.0296" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="75" x="720.3125" y="578.9408">String name()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="698.4375" x2="760.4167" y1="535.1206" y2="535.1206"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="50" x="763.5417" y="538.9303">(naming)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="816.6667" x2="878.6458" y1="535.1206" y2="535.1206"/><!--MD5=[b4ef6ced295d132cb9a446804051ded3]
class MethodGroupNameGuesser--><rect codeLine="29" fill="#282828" height="111.4563" id="MethodGroupNameGuesser" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="275" x="7.2917" y="75.5778"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="275" x="7.2917" y="75.5778"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="275" x="7.2917" y="98.6328"/><rect codeLine="29" fill="none" height="111.4563" id="MethodGroupNameGuesser" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="275" x="7.2917" y="75.5778"/><ellipse cx="49.0625" cy="91.272" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M50.9729,95.697 Q50.5457,95.9167 50.0757,96.0266 Q49.6057,96.1365 49.0869,96.1365 Q47.2437,96.1365 46.2732,94.9219 Q45.3027,93.7073 45.3027,91.4124 Q45.3027,89.1113 46.2732,87.8967 Q47.2437,86.6821 49.0869,86.6821 Q49.6057,86.6821 50.0818,86.792 Q50.5579,86.9019 50.9729,87.1216 L50.9729,89.1235 Q50.509,88.6963 50.0726,88.4979 Q49.6362,88.2996 49.1724,88.2996 Q48.1836,88.2996 47.6801,89.0839 Q47.1765,89.8682 47.1765,91.4124 Q47.1765,92.9504 47.6801,93.7347 Q48.1836,94.519 49.1724,94.519 Q49.6362,94.519 50.0726,94.3207 Q50.509,94.1223 50.9729,93.6951 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="177.0833" x="71.7708" y="95.9961">MethodGroupNameGuesser</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="8.3333" x2="281.25" y1="106.9661" y2="106.9661"/><ellipse cx="18.75" cy="142.336" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="242.7083" x="30.2083" y="149.2472">MethodGroupNameGuesser(LexakaiProject)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="101.0417" y1="125.1719" y2="125.1719"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="104.1667" y="128.9815">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="188.5417" x2="281.25" y1="125.1719" y2="125.1719"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="281.25" y1="158.9559" y2="158.9559"/><ellipse cx="18.75" cy="170.4142" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="215.625" x="30.2083" y="177.3254">Set&lt;String&gt; groupNames(UmlMethod)</text><!--MD5=[0bba44c05159d2ff291c1ff6be7b8f46]
class MethodGrouper--><rect codeLine="37" fill="#282828" height="155.1127" id="MethodGrouper" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="306.25" x="318.75" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="306.25" x="318.75" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="306.25" x="318.75" y="76.7578"/><rect codeLine="37" fill="none" height="155.1127" id="MethodGrouper" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="306.25" x="318.75" y="53.7028"/><ellipse cx="414.0625" cy="69.397" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M415.9729,73.822 Q415.5457,74.0417 415.0757,74.1516 Q414.6057,74.2615 414.0869,74.2615 Q412.2437,74.2615 411.2732,73.0469 Q410.3027,71.8323 410.3027,69.5374 Q410.3027,67.2363 411.2732,66.0217 Q412.2437,64.8071 414.0869,64.8071 Q414.6057,64.8071 415.0818,64.917 Q415.5579,65.0269 415.9729,65.2466 L415.9729,67.2485 Q415.509,66.8213 415.0726,66.6229 Q414.6362,66.4246 414.1724,66.4246 Q413.1836,66.4246 412.6801,67.2089 Q412.1765,67.9932 412.1765,69.5374 Q412.1765,71.0754 412.6801,71.8597 Q413.1836,72.644 414.1724,72.644 Q414.6362,72.644 415.0726,72.4457 Q415.509,72.2473 415.9729,71.8201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="101.0417" x="436.9792" y="74.1211">MethodGrouper</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="319.7917" x2="623.9583" y1="85.0911" y2="85.0911"/><ellipse cx="330.2083" cy="120.461" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="145.8333" x="341.6667" y="127.3722">MethodGrouper(UmlType)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="319.7917" x2="428.125" y1="103.2969" y2="103.2969"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="431.25" y="107.1065">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="515.625" x2="623.9583" y1="103.2969" y2="103.2969"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="319.7917" x2="623.9583" y1="137.0809" y2="137.0809"/><ellipse cx="330.2083" cy="148.5392" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="135.4167" x="341.6667" y="155.4504">MethodGroups groups()</text><ellipse cx="330.2083" cy="192.1956" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="273.9583" x="341.6667" y="199.1069">MethodGroups next(List&lt;UmlMethod&gt; methods)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="319.7917" x2="441.1458" y1="175.0315" y2="175.0315"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="55.2083" x="444.2708" y="178.8411">(iteration)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="502.6042" x2="623.9583" y1="175.0315" y2="175.0315"/><!--MD5=[ab526aeae621fd250dea5234ace35be9]
class MethodGroups--><rect codeLine="47" fill="#282828" height="317.2384" id="MethodGroups" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="260.4167" x="14.5833" y="271.4111"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="260.4167" x="14.5833" y="271.4111"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="260.4167" x="14.5833" y="294.4661"/><rect codeLine="47" fill="none" height="317.2384" id="MethodGroups" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="260.4167" x="14.5833" y="271.4111"/><ellipse cx="89.5833" cy="287.1053" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M91.4937,291.5304 Q91.0665,291.7501 90.5965,291.8599 Q90.1265,291.9698 89.6077,291.9698 Q87.7645,291.9698 86.794,290.7552 Q85.8236,289.5406 85.8236,287.2457 Q85.8236,284.9447 86.794,283.7301 Q87.7645,282.5155 89.6077,282.5155 Q90.1265,282.5155 90.6026,282.6253 Q91.0787,282.7352 91.4937,282.9549 L91.4937,284.9569 Q91.0299,284.5296 90.5935,284.3313 Q90.1571,284.1329 89.6932,284.1329 Q88.7044,284.1329 88.2009,284.9172 Q87.6973,285.7015 87.6973,287.2457 Q87.6973,288.7838 88.2009,289.5681 Q88.7044,290.3524 89.6932,290.3524 Q90.1571,290.3524 90.5935,290.154 Q91.0299,289.9556 91.4937,289.5284 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="95.8333" x="112.5" y="291.8294">MethodGroups</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="15.625" x2="273.9583" y1="302.7995" y2="302.7995"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="15.625" x2="273.9583" y1="311.1328" y2="311.1328"/><ellipse cx="26.0417" cy="322.5911" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="166.6667" x="37.5" y="329.5024">MethodGroup staticMethods()</text><ellipse cx="26.0417" cy="366.2476" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="146.875" x="37.5" y="373.1588">void add(UmlConstructor)</text><ellipse cx="26.0417" cy="385.9924" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="228.125" x="37.5" y="392.9036">void add(String groupName, UmlMethod)</text><ellipse cx="26.0417" cy="405.7373" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="133.3333" x="37.5" y="412.6485">void add(MethodGroup)</text><ellipse cx="26.0417" cy="425.4822" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="203.125" x="37.5" y="432.3934">Iterable&lt;MethodGroup&gt; allGroups()</text><ellipse cx="26.0417" cy="445.2271" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="213.5417" x="37.5" y="452.1383">List&lt;UmlConstructor&gt; constructors()</text><ellipse cx="26.0417" cy="464.9719" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="100" x="37.5" y="471.8831">boolean isEmpty()</text><ellipse cx="26.0417" cy="484.7168" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="228.125" x="37.5" y="491.628">Iterable&lt;MethodGroup&gt; namedGroups()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="15.625" x2="110.4167" y1="349.0835" y2="349.0835"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="113.5417" y="352.8931">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="179.1667" x2="273.9583" y1="349.0835" y2="349.0835"/><ellipse cx="26.0417" cy="528.3732" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="116.6667" x="37.5" y="535.2844">MethodGroup none()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="15.625" x2="119.2708" y1="511.2091" y2="511.2091"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="44.7917" x="122.3958" y="515.0187">(logical)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="170.3125" x2="273.9583" y1="511.2091" y2="511.2091"/><ellipse cx="26.0417" cy="572.0296" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="127.0833" x="37.5" y="578.9408">MethodGroup largest()</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="15.625" x2="123.4375" y1="554.8655" y2="554.8655"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="36.4583" x="126.5625" y="558.6751">(math)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="166.1458" x2="273.9583" y1="554.8655" y2="554.8655"/><!--MD5=[5fa86a23bf350114cd13acdbabba6c5f]
reverse link Comparable to MethodGroup--><path codeLine="9" d="M729.9583,176.2653 C735.9167,201.984 743.8438,236.2132 751.9375,271.1611 " fill="none" id="Comparable-backto-MethodGroup" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="722.7813,177.5882,725.1875,155.6403,736.9896,174.2965,722.7813,177.5882" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[a7d8c91b274a17d2eb138d639d5080ce]
reverse link Iterable to MethodGroup--><path codeLine="10" d="M847.125,176.2653 C841.1667,201.984 833.2396,236.2132 825.1458,271.1611 " fill="none" id="Iterable-backto-MethodGroup" style="stroke:#545454;stroke-width:1.5625;"/><polygon fill="none" points="840.0938,174.2965,851.8958,155.6403,854.3021,177.5882,840.0938,174.2965" style="stroke:#545454;stroke-width:1.5625;"/><!--MD5=[32003cb46ae9f046b2166a8df5af682c]
link MethodGroupNameGuesser to MethodGrouper--><!--MD5=[14f2a0b7113e1325f3883301760043a2]
link MethodGroupNameGuesser to MethodGroups--><!--MD5=[00e656366661d284e5a8cc3b7a1338e3]
@startuml

    !include lexakai.theme
    
    title "com.telenav.lexakai.builders.grouper"
    
    interface Comparable
    interface Iterable
    
    Comparable <|- - MethodGroup
    Iterable <|- - MethodGroup
    class MethodGroup
    {
        - -(constructors)- -
        +MethodGroup(String)
        - -
        +String uml()
        - -(collection)- -
        +boolean add(UmlMethod)
        +Count count()
        +UmlMethod first()
        +boolean isEmpty()
        +int size()
        +List<UmlMethod> sorted()
        - -(naming)- -
        +void name(String name)
        +String name()
    }
    
    class MethodGroupNameGuesser
    {
        - -(constructors)- -
        +MethodGroupNameGuesser(LexakaiProject)
        - -
        +Set<String> groupNames(UmlMethod)
    }
    
    class MethodGrouper
    {
        - -(constructors)- -
        +MethodGrouper(UmlType)
        - -
        +MethodGroups groups()
        - -(iteration)- -
        +MethodGroups next(List<UmlMethod> methods)
    }
    
    class MethodGroups
    {
        - -
        +MethodGroup staticMethods()
        - -(collection)- -
        +void add(UmlConstructor)
        +void add(String groupName, UmlMethod)
        +void add(MethodGroup)
        +Iterable<MethodGroup> allGroups()
        +List<UmlConstructor> constructors()
        +boolean isEmpty()
        +Iterable<MethodGroup> namedGroups()
        - -(logical)- -
        +MethodGroup none()
        - -(math)- -
        +MethodGroup largest()
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.lexakai.builders.grouper"
    
    interface Comparable
    interface Iterable
    
    Comparable <|- - MethodGroup
    Iterable <|- - MethodGroup
    class MethodGroup
    {
        - -(constructors)- -
        +MethodGroup(String)
        - -
        +String uml()
        - -(collection)- -
        +boolean add(UmlMethod)
        +Count count()
        +UmlMethod first()
        +boolean isEmpty()
        +int size()
        +List<UmlMethod> sorted()
        - -(naming)- -
        +void name(String name)
        +String name()
    }
    
    class MethodGroupNameGuesser
    {
        - -(constructors)- -
        +MethodGroupNameGuesser(LexakaiProject)
        - -
        +Set<String> groupNames(UmlMethod)
    }
    
    class MethodGrouper
    {
        - -(constructors)- -
        +MethodGrouper(UmlType)
        - -
        +MethodGroups groups()
        - -(iteration)- -
        +MethodGroups next(List<UmlMethod> methods)
    }
    
    class MethodGroups
    {
        - -
        +MethodGroup staticMethods()
        - -(collection)- -
        +void add(UmlConstructor)
        +void add(String groupName, UmlMethod)
        +void add(MethodGroup)
        +Iterable<MethodGroup> allGroups()
        +List<UmlConstructor> constructors()
        +boolean isEmpty()
        +Iterable<MethodGroup> namedGroups()
        - -(logical)- -
        +MethodGroup none()
        - -(math)- -
        +MethodGroup largest()
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>