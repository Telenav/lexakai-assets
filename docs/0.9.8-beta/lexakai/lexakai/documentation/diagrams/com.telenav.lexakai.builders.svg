<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="377.0833px" preserveAspectRatio="none" style="width:664px;height:377px;background:#333333;" version="1.1" viewBox="0 0 664 377" width="664.5833px" zoomAndPan="magnify"><defs/><g><rect fill="#48494B" height="41.2028" rx="8.3333" ry="8.3333" style="stroke:#545454;stroke-width:1.0416666666666667;" width="309.375" x="170.3125" y="2.0833"/><text fill="#C0C0C0" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="20.8333" lengthAdjust="spacing" textLength="286.4583" x="181.7708" y="30.5583">com.telenav.lexakai.builders</text><!--MD5=[2f4bc38ce76c3046cf128cb94462e76d]
class AssociationBuilder--><rect codeLine="6" fill="#282828" height="48.055" id="AssociationBuilder" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="159.375" x="100.5208" y="93.2861"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="159.375" x="100.5208" y="93.2861"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="159.375" x="100.5208" y="116.3411"/><rect codeLine="6" fill="none" height="48.055" id="AssociationBuilder" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="159.375" x="100.5208" y="93.2861"/><ellipse cx="115.1042" cy="108.9803" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M117.0146,113.4054 Q116.5873,113.6251 116.1174,113.7349 Q115.6474,113.8448 115.1286,113.8448 Q113.2853,113.8448 112.3149,112.6302 Q111.3444,111.4156 111.3444,109.1207 Q111.3444,106.8197 112.3149,105.6051 Q113.2853,104.3905 115.1286,104.3905 Q115.6474,104.3905 116.1235,104.5003 Q116.5995,104.6102 117.0146,104.8299 L117.0146,106.8319 Q116.5507,106.4046 116.1143,106.2063 Q115.6779,106.0079 115.214,106.0079 Q114.2253,106.0079 113.7217,106.7922 Q113.2182,107.5765 113.2182,109.1207 Q113.2182,110.6588 113.7217,111.4431 Q114.2253,112.2274 115.214,112.2274 Q115.6779,112.2274 116.1143,112.029 Q116.5507,111.8306 117.0146,111.4034 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="121.875" x="131.7708" y="113.7044">AssociationBuilder</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="101.5625" x2="258.8542" y1="124.6745" y2="124.6745"/><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="101.5625" x2="258.8542" y1="133.0078" y2="133.0078"/><!--MD5=[8fbdb842f949ab88a7b43a55e709feb4]
class MethodBuilder--><rect codeLine="10" fill="#282828" height="127.0345" id="MethodBuilder" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="360.4167" x="296.875" y="53.7028"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="360.4167" x="296.875" y="53.7028"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="360.4167" x="296.875" y="76.7578"/><rect codeLine="10" fill="none" height="127.0345" id="MethodBuilder" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="360.4167" x="296.875" y="53.7028"/><ellipse cx="422.3958" cy="69.397" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M424.3062,73.822 Q423.879,74.0417 423.409,74.1516 Q422.939,74.2615 422.4202,74.2615 Q420.577,74.2615 419.6065,73.0469 Q418.6361,71.8323 418.6361,69.5374 Q418.6361,67.2363 419.6065,66.0217 Q420.577,64.8071 422.4202,64.8071 Q422.939,64.8071 423.4151,64.917 Q423.8912,65.0269 424.3062,65.2466 L424.3062,67.2485 Q423.8424,66.8213 423.406,66.6229 Q422.9696,66.4246 422.5057,66.4246 Q421.5169,66.4246 421.0134,67.2089 Q420.5098,67.9932 420.5098,69.5374 Q420.5098,71.0754 421.0134,71.8597 Q421.5169,72.644 422.5057,72.644 Q422.9696,72.644 423.406,72.4457 Q423.8424,72.2473 424.3062,71.8201 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="94.7917" x="445.3125" y="74.1211">MethodBuilder</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="297.9167" x2="656.25" y1="85.0911" y2="85.0911"/><ellipse cx="308.3333" cy="120.461" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="328.125" x="319.7917" y="127.3722">MethodBuilder(LexakaiClassDiagram, TypeDeclaration&lt;?&gt;)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="297.9167" x2="433.3333" y1="103.2969" y2="103.2969"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="436.4583" y="107.1065">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="520.8333" x2="656.25" y1="103.2969" y2="103.2969"/><ellipse cx="308.3333" cy="164.1174" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="292.7083" x="319.7917" y="171.0286">void addMethodDeclarations(IndentingStringBuilder)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="297.9167" x2="442.7083" y1="146.9533" y2="146.9533"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="445.8333" y="150.7629">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="511.4583" x2="656.25" y1="146.9533" y2="146.9533"/><!--MD5=[4b2c5d02a972ece1eedaae441f62647c]
class TypeBuilder--><rect codeLine="18" fill="#282828" height="127.0345" id="TypeBuilder" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="345.8333" x="7.2917" y="243.2861"/><rect fill="#1B1B1A" height="31.3883" rx="8.3333" ry="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="345.8333" x="7.2917" y="243.2861"/><rect fill="#1B1B1A" height="8.3333" style="stroke:#1B1B1A;stroke-width:1.0416666666666667;" width="345.8333" x="7.2917" y="266.3411"/><rect codeLine="18" fill="none" height="127.0345" id="TypeBuilder" rx="8.3333" ry="8.3333" style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" width="345.8333" x="7.2917" y="243.2861"/><ellipse cx="134.375" cy="258.9803" fill="#0066CF" rx="10.4167" ry="10.4167" style="stroke:#0086EF;stroke-width:1.0416666666666667;"/><path d="M136.2854,263.4054 Q135.8582,263.6251 135.3882,263.7349 Q134.9182,263.8448 134.3994,263.8448 Q132.5562,263.8448 131.5857,262.6302 Q130.6152,261.4156 130.6152,259.1207 Q130.6152,256.8197 131.5857,255.6051 Q132.5562,254.3905 134.3994,254.3905 Q134.9182,254.3905 135.3943,254.5003 Q135.8704,254.6102 136.2854,254.8299 L136.2854,256.8319 Q135.8215,256.4046 135.3851,256.2063 Q134.9487,256.0079 134.4849,256.0079 Q133.4961,256.0079 132.9926,256.7922 Q132.489,257.5765 132.489,259.1207 Q132.489,260.6588 132.9926,261.4431 Q133.4961,262.2274 134.4849,262.2274 Q134.9487,262.2274 135.3851,262.029 Q135.8215,261.8306 136.2854,261.4034 Z " fill="#000000"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="77.0833" x="157.2917" y="263.7044">TypeBuilder</text><line style="stroke:#5E5E5E;stroke-width:1.5625;" x1="8.3333" x2="352.0833" y1="274.6745" y2="274.6745"/><ellipse cx="18.75" cy="310.0444" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="313.5417" x="30.2083" y="316.9556">TypeBuilder(LexakaiClassDiagram, TypeDeclaration&lt;?&gt;)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="136.4583" y1="292.8802" y2="292.8802"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="81.25" x="139.5833" y="296.6899">(constructors)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="223.9583" x2="352.0833" y1="292.8802" y2="292.8802"/><ellipse cx="18.75" cy="353.7008" fill="#84BE84" rx="3.125" ry="3.125" style="stroke:#038048;stroke-width:1.0416666666666667;"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="271.875" x="30.2083" y="360.612">void addTypeDeclaration(IndentingStringBuilder)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="8.3333" x2="145.8333" y1="336.5367" y2="336.5367"/><text fill="#D8BC00" font-family="Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif" font-size="11.4583" lengthAdjust="spacing" textLength="62.5" x="148.9583" y="340.3463">(collection)</text><line style="stroke:#5E5E5E;stroke-width:1.0416666666666667;" x1="214.5833" x2="352.0833" y1="336.5367" y2="336.5367"/><!--MD5=[418fc50ba276c24296e629d95f7b9c4d]
link AssociationBuilder to MethodBuilder--><!--MD5=[547817a0b302c71a6ce74258f7000573]
link AssociationBuilder to TypeBuilder--><!--MD5=[91e7f181aecbd59b6aad89ad17659a77]
@startuml

    !include lexakai.theme
    
    title "com.telenav.lexakai.builders"
    
    class AssociationBuilder
    {
    }
    
    class MethodBuilder
    {
        - -(constructors)- -
        +MethodBuilder(LexakaiClassDiagram, TypeDeclaration<?>)
        - -(collection)- -
        +void addMethodDeclarations(IndentingStringBuilder)
    }
    
    class TypeBuilder
    {
        - -(constructors)- -
        +TypeBuilder(LexakaiClassDiagram, TypeDeclaration<?>)
        - -(collection)- -
        +void addTypeDeclaration(IndentingStringBuilder)
    }
    
@enduml

@startuml









skinparam backgroundColor #333333






skinparam  {
    defaultFontName   "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
    defaultFontSize   12
    defaultTextAlignment left
    shadowing false
    RoundCorner 10
    TitleFontSize 18
}

skinparam defaultFontName       "Open Sans,Avenir,Nunito,Arial,Helvetica,SansSerif"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             false
skinparam roundcorner           16
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               3
skinparam ArrowColor            #545454
skinparam stereotype {
    CBackgroundColor #0066cf
    CBorderColor #0086ef
    ABackgroundColor #C8Ac00
    ABorderColor #D8Bc00
    IBackgroundColor #008400
    IBorderColor #239c23
    EBackgroundColor #cf6300
    EBorderColor #ef8300
    NBackgroundColor #3380b9
    NBorderColor #004d86
}
skinparam title {
	FontColor	                 #c0c0c0
 	BorderColor                  #545454
	FontSize	    	         20
	BorderRoundCorner            16
	BorderThickness 	         1
	BackgroundColor              #48494b
}


skinparam legend {
	BackgroundColor #303030
	BorderColor #404040
	FontColor #a0a0a0
}

	skinparam swimlane {
	BorderColor #5e5e5e
	BorderThickness 2
	TitleBackgroundColor  #6d6d6d-#484848
	TitleFontColor #303030
}

skinparam activity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BarColor #00FF00
	StartColor #0060a8
	EndColor #0060a8
	DiamondBackgroundColor #6d6d6d-#3a3a3a
  	DiamondBorderColor #3a3a3a
  	DiamondFontColor #fefefe
}


skinparam participant {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam arrow {
	Thickness 1.5
	Color #545454
	FontColor #a0a0a0
    FontStyle bold
    MessageAlignment center
}



skinparam sequence {
	BorderColor #303030
	TitleFontColor #303030
	BackgroundColor #333333
	StartColor #303030
	EndColor #303030
	BoxBackgroundColor #333333
	BoxBorderColor #484848
	BoxFontColor #484848
	LifeLineBorderColor #484848
	LifeLineBorderThickness 2
	LifeLineBackgroundColor #3a3a3a
	GroupBorderColor #484848
	GroupFontColor #484848
	GroupHeaderFontColor #0060a8
	GroupBackgroundColor #484848
	GroupHeaderBackgroundColor #333333
	DividerBackgroundColor #484848
    DividerBorderColor #484848
    DividerBorderThickness 2
    DividerFontColor #D8Bc00
	ReferenceBackgroundColor #333333
	ReferenceBorderColor #484848
	ReferenceFontColor #fefefe
	ReferenceHeaderBackgroundColor #484848
}


skinparam partition {
	BorderColor #303030
	FontColor #333333
	BackgroundColor #333333
}


skinparam collections {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam control {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam entity {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam boundary {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam agent {
	BackgroundColor #ff8000
	BorderColor #ff9933
	FontColor #484848
}


skinparam note {
	BorderThickness 1
	BackgroundColor #1b1b1a
	BorderColor #5e5e5e
	FontSize 11
	FontColor #a0a0a0
}


skinparam artifact {
	BorderThickness 10
	BorderColor #5e5e5e
	BackgroundColor #1b1b1a
	FontColor #D8Bc00
}


skinparam component {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam interface {
	BackgroundColor  #008400
	BorderColor  #007F00
	FontColor #484848
}


skinparam storage {
	BackgroundColor #ff8000
  	BorderColor #cc6600
	FontColor #222222
}


skinparam node {
	BackgroundColor #333333
	BorderColor #333333
	FontColor #C8Ac00
}


skinparam cloud {
	BackgroundColor #484848-black
	BorderColor #484848
	FontColor #D8Bc00
}


skinparam database {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor  #333333
}


skinparam class {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	HeaderBackgroundColor #1b1b1a
    BackgroundColor #282828
    BorderColor #5e5e5e
 	StereotypeFontColor #a0a0a0
    StereotypeFontStyle bold
	BorderThickness 1
	AttributeFontColor #D8Bc00
	AttributeFontSize 11
    FontColor #D8Bc00
    FontStyle bold
}


skinparam object {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StereotypeFontColor #484848
	BorderThickness 1
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam rectangle {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
	StereotypeFontColor #303030
}


skinparam package {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	BackgroundColor #333333
	BorderThickness 2
}


skinparam folder {
	BackgroundColor #6d6d6d
  	BorderColor #ff8000
	FontColor #ff8000
	BorderThickness 2
}


skinparam frame {
	BackgroundColor #6d6d6d
  	BorderColor #0060a8
	FontColor #0060a8
	BorderThickness 2
}


skinparam state {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
	StartColor #0060a8
	EndColor #0060a8
	AttributeFontColor #fefefe
	AttributeFontSize 11
}


skinparam queue {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}


skinparam card {
	BackgroundColor #0060a8
	BorderColor #004d86
	FontColor $INFO_TEXT
}


skinparam file {
	BackgroundColor #6d6d6d-#484848
	BorderColor #0060a8
	FontColor #fefefe
}


skinparam stack {
		FontColor #C8Ac00
	BorderColor #333333
	BackgroundColor #333333-#333333
}

    
    title "com.telenav.lexakai.builders"
    
    class AssociationBuilder
    {
    }
    
    class MethodBuilder
    {
        - -(constructors)- -
        +MethodBuilder(LexakaiClassDiagram, TypeDeclaration<?>)
        - -(collection)- -
        +void addMethodDeclarations(IndentingStringBuilder)
    }
    
    class TypeBuilder
    {
        - -(constructors)- -
        +TypeBuilder(LexakaiClassDiagram, TypeDeclaration<?>)
        - -(collection)- -
        +void addTypeDeclaration(IndentingStringBuilder)
    }
    
@enduml

PlantUML version 1.2021.01(Tue Feb 02 00:55:08 MST 2021)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>